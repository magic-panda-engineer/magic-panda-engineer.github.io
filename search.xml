<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[解決 Hexo Searchdb 不能使用的問題]]></title>
    <url>%2FHexo%2Fsolve-hexo-searchdb-not-work.html</url>
    <content type="text"><![CDATA[有一天，突然Hexo的searchdb插件不能用了！！ 點擊搜尋後，會顯示載入中的動畫，可是一直都沒有載入 orz Hexo的搜尋文章功能，是建立一支xml檔上面的，叫做search.xml 打開瀏覽器，進入到這個xml檔的路由，看看到底發生什麼事情：localhost:4000/search.xml 這時候畫面居然提示：Input is not proper UTF-8, indicate encoding ! 怎麼可能會有非UTF-8的特殊字元呢@@？ 查遍了所有文章，都找不到非UTF-8的字元，真的是非常的神奇。 解決方法這時候突然靈機一動，想說會不會是VS code沒有顯示出非UTF-8的字元。 於是用Sublime text打開專案，果然就在字裡行間發現了一個東西長成這樣&lt;0x40&gt;。 也不知道怎麼冒出這個這東西的，總之刪掉了就好了…… orz 如果你Hexo searchdb的功能也不能用的話，試試看這招吧！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo searchdb</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Activeandroid在SDK26之後會遇到的bug]]></title>
    <url>%2FAndroid%2Fandroid-failed-to-find-provider-null-for-user-0.html</url>
    <content type="text"><![CDATA[在Room出來之前，activeandroid是最受歡的ORM之一。 在業界還是很容易碰到維護案裡，使用activeandroid。 可是在Android SDK 26之後，activeandroid會出現一個bug。 會出現下列的錯誤訊息：Error saving model java.lang.SecurityException: Failed to find provider null for user 0; expected to find a valid ContentProvider for this authority 這時候要怎麼解決這個問題呢？ 既然錯誤訊息說沒有contentprovider，我們就加一個上去吧！ 打開專案的AndroidManifest.xml檔，在aaplication tag 之間貼上下列的程式碼，就可以修好這個bug啦！ 123456&lt;provider android:name="com.activeandroid.content.ContentProvider" android:authorities="&lt;你的專案package&gt;" android:enabled="true" android:exported="false"&gt;&lt;/provider&gt; 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>android-plugin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo文件永久連結設定的BUG順便談SEO]]></title>
    <url>%2FHexo%2Fhexo-permalink-bug-and-seo.html</url>
    <content type="text"><![CDATA[永久連結(permalink)在SEO中是非常重要的因素，這關乎你的網站能不能被容易被排名到前面。 在設定Hexo的永久連結時，按照官方文件做，結果卻遇到一個bug。 這篇文章最後會分享怎麼解決這個問題。 先談時間格式和SEO一個好的永久連結絕對不能超過三層，不然SEO的排名會比較後面。 像是www.test.com/article/2019/01/01/page.html 這種很多層的網址，就比較難有好的SEO表現。 （當然如果你這篇很多層的文章流量超高，SEO也是會排名比較前面啦！） 一般來說，網址會盡量不要超過三層，而日期這種型式的永久連結，就剛好會讓你網址超過三層。 再者，如果網址裡有日期的話，隨著時間的推移，Google漸漸下調你文章的排名。 雖然有的文章是不受時間影響的經典之作，但是就是Google的機制，也沒有辦法。 所以在設定Hexo永久連結時，建議要先把日期格式給改掉。 內容分類和SEO如果一個網址長得像這樣 www.test.com/cloths/men.html ，一眼就能看出這個頁面的分類屬於服飾類，而且還是男裝。 Google的爬蟲也是一樣的，這種分類清楚的網址，特別容易有較好的SEO表現。 所以在設定Hexo永久連結時，建議使用分類的格式。 而且文章的命名，也要清楚直接，讓人一看就知道這個網址可能是在講什麼主題。 記得字和字之間用dash - 來分開，不要用underscore _，Google有說過dash是比較好選擇。 切記之後就不要再改文章分類了，不然會嚴重影響SEO Hexo文件的BUG和解決之道談完了以上的內容，就是要設定Hexo的永久連結啦！ 按照文件，我要的永久連結格式是 分類/文章名稱，應該設定為 :category/:title 可是這樣子設定之後，卻沒辦法進去文章閱讀 @@ 反而會將整個文章頁面下載下來，打開那個下載檔，裡面是該文章頁面的內容……。 要修正這個問題，只要將 :category/:title 改成 :category/:title.html 就可以啦！！ 如圖所示，加上.html即可 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[為什麼選用Hexo來寫部落格]]></title>
    <url>%2FHexo%2Fwhy-choose-hexo.html</url>
    <content type="text"><![CDATA[在Evernote寫技術筆記很多年了，最近因為想寫技術部落格，於是開始來尋找部落格的架站平台。 原本想說用熟悉的Wordpress，可是想到主機商的費用和搬遷的不便性，就決定使用時下最熱門的Static Site Generator啦！ 目前Static Site Generator現在有三個最活躍的技術，分別是：Jekyll、Hugo、Hexo。 一開始在決定要用哪個技術時，其實考慮了很久。於是把各家的好壞都寫出來，讓大家參考。 Jekyll的好與壞Jekyll是Github自家品牌的Static Site Generator，有著強力後盾做為支援。 可是它是使用Ruby來達成的。 大家都知道Ruby在Windows環境下的支援度不太夠，雖然我是用Mac，但還是很常用Windows的環境來做開發。 再來是Ruby相對比較慢，看了許多部落格主的心得，文章多了之後，在建置網站時真的會花上幾分鐘的時間。 雖然後來incremental regeneration，能夠大幅加速，但是考量到常常使用Windows，加上和Ruby不熟，還是放棄它了。 Hugo的好與壞Hugo是用Go語言來達成的Static Site Generator，目前github上面的星星數已經超過Hexo了。 Hugo的特色是生成靜態網站的速度極快！官網號稱它是世界最快的！！ 原本我一度就要使用Hugo來架站了，可是發現Hugo的插件和主題，相對比較少。 而且居然還沒有上到1.0版，反觀Hexo都3.8版了。 於是就暫時放棄使用Hugo啦，未來的某一天，Hugo更成熟的話，說不定會改用Hugo吧？ Hexo的好與壞Hexo是用Nodejs去完成的，生成的速度也是很快，不過的確還輸給Hugo一截。 實測Hugo1秒內就能建置完三篇文章的內容，Hexo要花4秒多。 雖然Hexo慢了一點，但是Hexo已經出來很多年了，周邊插件和社群活躍度都很高，主題選擇性也很廣。 而且我對於Nodejs相關的生態系比較熟悉，到時候要自己改些什麼東西也比較方便。 最後讓我選擇Hexo的臨門一腳，是Next這個主題，其配色是黑和白，相當符合大魔術熊貓工程師的意象 XDDD 附帶一提，Hexo是台灣人做的哦！在中國那邊的社群也是很活躍，因此中文資源也還滿多的。 以上就是三大Static Site Generator的分析啦！ 接下來會再分享一些使用Hexo時踩到的坑。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo Next theme</tag>
        <tag>Wordpress</tag>
        <tag>Static Site Generator</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正確使用GPIO cleanup()方式]]></title>
    <url>%2FRaspberryPi%2Fcorrect-way-to-use-GPIO-cleanup.html</url>
    <content type="text"><![CDATA[在以Python寫樹莓派GPIO的時候，範例程式常常會在最後一行加上GPIO.cleanup()，讓程式結束時可以把GPIO的設定清掉。 最近在開發時，發現明明都已經加上了GPIO.cleanup()，但是設定還是都清不掉……。 GPIO一旦沒有清掉，在跑同一隻程式時，會出RuntimeWarning: This channel is already in use, continuing anyway. Use GPIO.setwarnings(False) to disable warnings. 這樣子的一段警告。 此時只能重新開機，才能重置GPIO。可是重新開機很麻煩啊，該怎麼辦呢？ 問題點在哪裡？首先我們先來看看問題點在哪？ 一般的範例程式，都是這麼寫的： 1234567while True: GPIO.output(LED_PIN, GPIO.HIGH) print("燈亮啦！")GPIO.cleanup() 上面的程式碼，明明在最後一行加上了 RuntimeWarning: This channel is already in use, continuing anyway. 可是按下 CTRL + C 中止之後，再跑一次程式，還是會得到 RuntimeWarning: This channel is already in use, continuing anyway. 的警告 因為 GPIO.cleanup() 在 while 迴圈外，所以根本不會執行到啊！！ 解決方法那麼我們該如何解決呢？ 只要善用例外處理的 try except finally 的技巧，就可以讓 GPIO.cleanup() 順利運作啦。 正確使用GPIO.cleanup()方式的範例如下： 1234567891011121314151617try: while True: GPIO.output(LED_PIN, GPIO.HIGH) print("燈亮啦！") except KeyboardInterrupt: # 當你按下 CTRL+C 中止程式後，所要做的動作 print("STOP") except: # 其他例外發生的時候，所要做的動作 print("Other error or exception occurred!" ) finally: GPIO.cleanup() # 把這段程式碼放在 finally 區域，確保程式中止時能夠執行並清掉GPIO的設定！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版按愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>RaspberryPi</category>
      </categories>
      <tags>
        <tag>IOT</tag>
        <tag>GPIO</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三波長燈管真的很亮]]></title>
    <url>%2FElectrician-plumber%2F20190406-hi-vision-lamp-is-good.html</url>
    <content type="text"><![CDATA[最近因為覺得工作室的燈光實在太暗了 除了工作時會想要睡覺之外，還會被螢幕的光線弄得很刺眼 於是來研究如何讓日光燈管更亮 爬了一下文，所謂的T5、T8、T9等等常見的名詞，指的其實是燈管的直徑，和照明的亮度關係不太大 比較重要的一點是，三波長燈管，遠比舊型的螢光燈管還要來得亮 也就是說，我只要換成三波長燈管，就可以讓工作室更亮囉！ 該怎麼買三波長燈管呢？很簡單，只要先看你的目前燈管的型號，然後再GOOGLE對應的型號就可以啦 以我原本的燈管為例，原本的型號是 FL20D/18 上網查了一下同規格的三波長燈管型號為 FL20/18D-EX 而且包裝上就寫明了這是三波長燈管，就可以直接買回家安裝啦！ 工作室裝上三波長燈管之後，再也不用額外開檯燈了呢！！註：T8和T9燈管，現在大部分都是三波長燈管啦]]></content>
      <categories>
        <category>Electrician_plumber</category>
      </categories>
      <tags>
        <tag>水電工</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[關於我]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[為什麼會想把這個技術部落格，取名為大魔術熊貓工程師呢？ 做為一個接案工程師，其實就像是魔術師一樣，客戶提出的要求，總是要像變魔術一樣把它變出來。 熊貓大概是我最喜歡的動物了。每次看到熊貓的傻傻呆萌的影片，受傷的心靈都被療瘉了！！ 熊貓命名有個大原則，就是用疊字。例如說團團、圓圓。剛好我的名字是KoKo，黑眼圈也很重XDD 中華一番裡樓麟艦的料理對決很精采。 為什麼不在Evernote上寫技術筆記了？ 還是一直在Evernote上寫技術筆記。Evernote的功能超強大，尤其是搜尋功能，都能準確的找到寫過的筆記，真的超神！ Evernote除了不支持md語法外，最大的缺點就是筆記是寫給自己看的，不像技術部落格的筆記是寫給全世界的人看。 我還是持續使用Evernote，不過寫的內容比較像是草稿。對外發表的技術筆記會整理過，才會分享在大魔術熊貓工程師。 多年來已經累積有上百篇的Evernote技術筆記，會再慢慢整理，分享給全世界。所以有時候可能會一天內發表很多文章。 工程師的社交圈，其實很看重技術部落格。如果一個工程師沒有寫技術部落格，很容易被質疑技術力不足。（雖然有點病態，但這是我想寫技術部落格的主因XDD） 為什麼這個技術部落格的主題包羅萬象？ 接案工程師的工作性質，本來就會遇到各式各樣的難題。能夠把客戶的困難解決，才是優秀的工程師。 我是雙子座AB型，所以喜歡涉獵各種面向的知識。 身為一個潮男，走在技術的尖端也是很合理的。 作過些什麼專案呢？ 從硬體玩到軟體，從後端玩到前端，從Android玩到iOS，從物聯網玩到AI。 作品集網站，不過有些幫客戶做的太敏感的，就不克放上來啦！]]></content>
  </entry>
  <entry>
    <title><![CDATA[categories]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
</search>
