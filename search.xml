<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Raspberry Pi 4 開箱文（Desktop Kit）]]></title>
    <url>%2FRaspberryPi%2Fraspberry-pi-4-desktop-kit-unboxing.html</url>
    <content type="text"><![CDATA[2019 COSCUP有很多來自海外的社群，還有來自日本的Japanese Raspberry Pi Users Group 剛好我也是樹莓派玩很兇，就去社群攤位聊聊天 Masafumi Ohta（太田昌文）先生是日本樹莓派社群的負責人，也出過樹莓派的書 我們聊了好多樹莓派相關的技術和應用，然後抽中一組Raspberry Pi 4 Desktop Kit當成紀念 XDD COSCUP的目的，真的就是要去交朋友的！！ 先來介紹樹莓派4 model BRaspberry Pi 4 model B 可以說是現在最強的開發板之一了 有幾點和以前比較不一樣的，需要特別注意。 RAM的大小有1GB、2GB 和 4GB 可以選擇。 電源供應變成 5V/3A DC 的USB type C 了。（注意電源線要買沒有e-mark的哦！） 有兩個 mini HDMI 輸出，也就是說，支援雙螢幕啦！！還可以到 4k 哦！！ 支援藍牙 5.0 啦！ 從4個USB 2.0，變成2個 USB 3.0 和2個 USB 2.0。 整體規格看下來，真的屌打我那張Tinker Board，甚至是還勝過新出的Tinker Board S了。 看樣子可以讓我的工作很久的小server，Tinker Board退役了……。 開箱文開始Raspberry Pi 4 Desktop Kit 是樹莓派4的桌機組，內含： 電源供應器 micro HDMI 線材兩條 鼠鍵組 最新版 Raspberry Pi Beginner’s Guide 16GB SD卡，已安裝NOOBS Raspberry Pi 4 RAM 4GB版，含外殼 外包裝 外包裝的紅色，就是樹莓派專屬的紅色，整體很有樹莓派的設計風格。 外包裝的側面，標示著內含物。 打來會看到電源供應器、Pi 4含外殼、官方滑鼠，和一張SD卡 把上層拿起來，可以看到下層有官方鍵盤，鍵盤下方有Beginner’s Guide。 兩條mini HDMI線也放在下層 SD card SD卡含adapter，上面印有樹莓派的logo，真的超可愛！！ 抽出micro SD卡後，看到是SanDisk EDGE 16GB （還好不是附雜牌的micro SD卡 XDD） 電源供應器 這組電源供應器的插頭型號是US，在台灣就可以直接插上插座囉！ 接頭也是USB Type C 的了，可惜線材和adapter是不能拆開的。 官方滑鼠 滑鼠盒的上下開口都有封條。是標準的三鍵滑鼠，可以相容所有的樹莓派產品。 滑鼠正面 滑鼠背面。跟我的手掌差不多大呢！果然是號稱人體工學設計。 Pi 4 本體 一打開盒子，發現外殼已經穿上了。 期待多年的 USB 3.0，真的實裝了！！ 把外殼拆開，可以看到該有的插孔都還在。 但是畫面輸出變成兩個 mini HDMI了。 官方鍵盤 鍵盤包裝的背面。居然寫著，提供3個 USB 2.0的孔！！ 鍵盤正面，是78鍵鍵盤。連接線和鍵盤本身是可以分開的。 鍵盤常見的 windows 鍵，也改成了樹莓派鍵。 鍵盤的上面還真的提供3個 USB 2.0 的孔，看樣子可以插其他的周邊裝置了！！ USB 3.0就留給大量讀寫的I/O吧。 mini HDMI 附贈兩條 mini HDMI，就可以直接做雙螢幕啦！！ 官方手冊 裡面還附了一本Raspberry Pi Beginner’s Guide，內容已經升級到支援 Pi 4 了。 看看內容，覺得教的還滿基本的！ 結語以上就是 Raspberry Pi 4 的開箱文啦！！ 大家有心動，想要買一組 Desktop Kit 了嗎？ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>RaspberryPi</category>
      </categories>
      <tags>
        <tag>IOT</tag>
        <tag>Unboxing</tag>
        <tag>conference</tag>
        <tag>Raspberry Pi 4</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[從負面案例來討論接案工程師該有什麼軟技能]]></title>
    <url>%2Fwork%2Fnegative-examples-for-remote-work.html</url>
    <content type="text"><![CDATA[做遠距接案工作也快兩年了，和許多工程師合作過，也接過不少案子 2019/05/17，在台中最棒的共同工作空間Monospace，剛好有個遠距工作者的分享會 於是就立刻去報名講者，分享一些自己碰到的負面案例 希望可以從這些負面案例，和其他遠距工作者交流 投影片的內容很短，可以直接跳到最後面看總結 XDD 從負面案例來討論接案工程師該有什麼軟技能 from Ko Ko 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>remote work</tag>
        <tag>slides</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[YOLO V1 論文導讀投影片]]></title>
    <url>%2FAI%2Fyolo-v1-slides.html</url>
    <content type="text"><![CDATA[參加了一段時間的 AI Tech 論文導讀社群，終於輪到我報告論文啦！！ 因為工作上需要用到大量的物件辨識的技術，所以就選了承先起後、繼往開來的YOLO V1來做報告。 我是在2019/03/17、於夢森林分享論文的，不過最近才有空上傳投影片 XDDD 投影片上傳在slideshare，就直接嵌進來。 YOLO V1 論文導讀 from Ko Ko 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>slides</tag>
        <tag>Object Detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用Python比較兩個list內容的差異]]></title>
    <url>%2FPython%2Fpython-compare-two-lists.html</url>
    <content type="text"><![CDATA[在整理資料的過程中，常常碰到兩個資料夾之中，裝有類似、但不完全一樣的檔案數量 例如說，同樣的檔案名稱，但是不同的副檔名（常見於深度學習的影像檔和標記檔） 這時候就會先把各類別的檔案名稱，存到各自的list之中 如果要比較兩個list之間的差異，就可以利用set().symmetric_difference()來完成： 12345678def Diff(li1, li2): return (list(set(li1).symmetric_difference(set(li2))))list1 = [1,2,3,4,5]list2 = [5,6,7,8,9]print(Diff(list1, list2)) 因為兩個list，只有5是一樣的，這時候會就印出：1[1, 2, 3, 4, 6, 7, 8, 9] 如果改把list2改成：1list2 = [1,2,3,4] 那麼就會印出：[5]，因為只有5，是不一樣的。 善用set().symmetric_difference()，就可以很容易的找到兩個資料夾不同的地方啦！！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用Wakatime來掌握寫程式的時間]]></title>
    <url>%2Ftools%2Fwakatime-for-time-management.html</url>
    <content type="text"><![CDATA[平常都不知道花了多少時間在寫程式嗎？ 一個專案投入多少時間成本進去，拿到的收入是否對價呢？ 在這裡推荐一個好工具來管理寫code寫專案的時間。 WakatimeWakatime是一個開源專案的時間管理插件。 針對不同的IDE或是編輯器，他都有提供插件。 像是我常用的Android Studio，VS code，Visual Studio 等等工具，都能安裝這個插件。 大家可以去這裡看看Wakatime支援哪些IDE。 並且點擊IDE icon進去之後，可以看到安裝的詳細流程，因此本文就不介紹Wakatime的安裝啦！ 使用github帳號登入，並且在你用的IDE中安裝好並輸入要求的API key（安裝流程裡都有寫哦！），就能開始使用囉！ Wakatime有哪些功能？Wakatime最重要的，就是寫程式時間的統計啦！ 只要登入Wakatime官方網站後，首頁就是你寫程式的Dashboard。 這個Dashboard是以一周為單位，當然可以從settings再進去做調整。 最基本的功能就是你這周每天寫程式寫了多久。 還有圓餅圖，分析你在各個程式語言裡花了多久的比例。 這個功能很酷炫，尤其是寫很多語言的工程師，圓餅圖會變得很花 XDD 還有你使用什麼IDE，以及用了多久。 像我最常用的就是Android Studio，VS code，Visual Studio，從圖片中看起來分配得還滿平均的XDD。 最重要的功能就是在這裡啦！！ 可以看你每個專案花了多少時間，在專案管理上特別的好用。 當然每個專案點擊進去，還會有更詳細的分析。 有了這個輔助功能之後，更能掌握自己寫程式的效率，在估算人天或是人月上就更方便了呢！ 不過工程師不是一直都在coding，也會很常在看技術文件、論文或是做設計，因此不能單單用Wakatime來評估績效哦！ Wakatime費用Wakatime 如果免費使用的話，只會顯示兩周內的紀錄。 不過那些紀錄都不會被刪掉的，一旦你付費，就能看到自己從古至今的紀錄啦！ 費用的連結在這裡。 還是要再次強調工程師不是一直都在coding，因此不能單單用Wakatime來評估績效哦！ 如果是企業買來看員工的效率，要考慮一下相關的績效指標哦！ 不想付費怎麼辦？別擔心，Wakatime每周都會寄周報到你的電子信箱。 周報裡面都會有這周的語言使用時間、每個專案花的時間和IDE的時間。 因此透過email的內容做紀錄，也是可以啦！ Wakatime的安全性Wakatime是開源的，如果怕怕的話，可以去Wakatime github看原始碼哦！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>IDE tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Next主題加上最近文章版面]]></title>
    <url>%2FHexo%2Fhexo-next-recent-article-area.html</url>
    <content type="text"><![CDATA[當初會選擇Next這個主題，就是看在它黑白分明配色，相當符合熊貓的主題。 用了一陣子後發現，這個主題居然沒有最近文章的版面。 沒有的話，就只好自己動手做啦！ 雖然不會寫swig，不過大概就是和ejs很像的東西吧 具體步驟 打開next/layout/_macro/sidebar.swig 找個喜歡的地方，貼上下列程式碼。（我是貼在if theme.links的前面） 1234567891011121314151617&#123;% if theme.recent_posts %&#125;&lt;div class="links-of-blogroll motion-element &#123;&#123; "links-of-blogroll-" + theme.recent_posts_layout &#125;&#125;"&gt;&lt;div class="links-of-blogroll-title"&gt; &lt;!-- 設定你要的fa fa icon--&gt; &lt;i class="fa fa-history fa-&#123;&#123; theme.recent_posts_icon | lower &#125;&#125;" aria-hidden="true"&gt;&lt;/i&gt; &#123;&#123; theme.recent_posts_title &#125;&#125;&lt;/div&gt;&lt;ul class="links-of-blogroll-list"&gt; &#123;% set posts = site.posts.sort('-date') %&#125; &#123;% for post in posts.slice('0', '5') %&#125; &lt;li&gt; &lt;a href="&#123;&#123; url_for(post.path) &#125;&#125;" title="&#123;&#123; post.title &#125;&#125;" target="_blank"&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt; &lt;/li&gt; &#123;% endfor %&#125;&lt;/ul&gt;&lt;/div&gt;&#123;% endif %&#125; 在主題的設定文件hexo/themes/next/_config.yml，加上下列參數。 123recent_posts_title: 近期文章recent_posts_layout: blockrecent_posts: true 使用指令重建hexo，就可以看到近期文章的區塊啦。hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo Next theme</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 404和字母大小寫的問題]]></title>
    <url>%2FHexo%2Fhexo-404-and-letter-case.html</url>
    <content type="text"><![CDATA[最近發現有些頁面會出現404，都是發生在點入特定的標簽或是分類時發生了。 研究了一下，居然是因為字母大小寫的問題產生的 orz。像是分類如果寫CSS，和css，就會出現錯誤。 那麼我們要怎麼解決這個問呢？ 解決方法在.deploy_git中，原始的設置是對大小寫不敏感的，可實際上大小寫不一樣就讓你404。 所以我們要修改.deploy_git中的設置。 從Windows檔案總管或Mac Finder中打開專案中.deploy_git的資料夾。 進到.deploy_git資料夾中.git，找到文件config。(用VS code可能會找不到.git資料夾) 打開文件config，將 ignorecase=true 改為 ignorecase=false，存檔。 把.deploy_git資料夾中除了.git之外的文件通通刪掉。 再用指令hexo clean &amp;&amp; hexo g -d，清除並佈署上去，就會發現404修好啦！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>page 404</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS Flex筆記--從六角學院的遊戲出發]]></title>
    <url>%2FCSS%2Fcss-flex-hexschool-game.html</url>
    <content type="text"><![CDATA[最近玩了六角學院出的CSS Flex的遊戲 雖然自從Bootstrap 4 出來之後，就開始有在用Flex排版。 但是畢竟依賴框架的下場就是原生的寫法不甚熟悉。 不過沒沒有想到花了半個小時，就破全關了。等於一個關卡1.5分鐘。 某位前端高手好友，也差不多是這個數字，表示我寫CSS的功力還算可以啦 XDDD 倒是六角學院的社團內一堆十分鐘左右破關的妖魔鬼怪，真的是前端人材濟濟。 CSS Flex排版看完這篇就能幾乎掌握CSS Flex排版啦！！ Flex是CSS3之後推出的，主要為了適應不同螢幕尺寸和設備而誕生的排版方法。 因此已經不用再使用Float排版啦！ 1.先設定Flex排版一開始要先設定一個Flex排版，不然Flex相關的屬性都會吃不到的。 123.my-flex &#123; display: flex;&#125; 2.Flex可以設定排版方向 – flex-direction可以設定欄與列的排版方向，光這是一點就打爆古早Float的寫法啦！！ 如果不設定的話，default是row。 Flex-direction的效果可以到這個網頁去試玩。 1234.my-flex &#123; display: flex; flex-direction: row|row-reverse|column|column-reverse|initial|inherit;&#125; 3.元素超出螢幕範圍時是否換行 – flex-wrap如果選擇no-wrap的話，就會把所有的元素都擠在同一行裡。 no-wrap做某些表格類型的呈現，但又不是表格的特別好用 XDD。 一樣可以到W3School去試玩 1234.my-flex &#123; display: flex; flex-wrap: nowrap|wrap|wrap-reverse|initial|inherit;&#125; 4.把direction 和 wrap 二合一 – flex-flow用flex-flow可以只寫一行，就把direction 和 wrap 二合一。 第一個參數direction，第二格是wrap。注意中間用空格隔開。 1234.my-flex &#123; display: flex; flex-flow:row-reverse nowrap;&#125; 5.元素對齊的方式之一 – justify-contentjustify-content是元素對齊的方式，可以簡單地把它當成水平排版的方式。 最常用到的功能就是水平置中啦！！ 一樣可以到W3School去試玩 1234.my-flex &#123; display: flex; justify-content: flex-start|flex-end|center|space-between|space-around|initial|inherit;&#125; 6.元素對齊的方式之二 – align-itemsalign-items是元素對齊的方式，可以簡單地把它當成垂直排版的方式。 最常用到的功能就是垂直置中啦！！ (垂直伸展stretch其實也還滿常用的到的啦) 一樣可以到W3School去試玩 1234.my-flex &#123; display: flex; align-items: stretch|center|flex-start|flex-end|baseline|initial|inherit;&#125; 7.多行元素對齊的方式 – align-contentalign-content是多行元素對齊的方式。 注意這個屬性要加上flex-wrap才能使用哦！！ 一樣可以到W3School去試玩 1234.my-flex &#123; display: flex; align-items: stretch|center|flex-start|flex-end|baseline|initial|inherit;&#125; 到此為止，已經學完CSS Flex的排版啦！！接下來要來看CSS Flex個別子元素的排版啦！！ CSS Flex個別子元素的排版一個Flex容器內的各個子元素，都還可以獨立再做排版的。 1.個別子元素的對齊 – align-selfalign-self是針對個別子元素的對齊調整，只要注意該子元素的外層是flex即可。 一樣可以到W3School去試玩 12345678.my-flex &#123; display: flex;&#125;//外層是.my-flex.my-flex1 &#123; align-self: auto|stretch|center|flex-start|flex-end|baseline|initial|inherit;&#125; 2.個別子元素的寬度 – flex-grow &amp; flex-shrinkflex-grow &amp; flex-shrink是針對個別子元素的寬度調整，望文生義即可知道為寬度增加和減少。 要注意該子元素的外層是flex。 到W3School去試玩flex-grow到W3School去試玩flex-shrink 123456789101112.my-flex &#123; display: flex;&#125;//外層是.my-flex.my-flex1 &#123; flex-shrink:8;&#125;.my-flex2 &#123; flex-grow:8;&#125; 以上就是CSS Flex常用到的排版技巧啦！！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>css flex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解決 Hexo Searchdb 不能使用的問題]]></title>
    <url>%2FHexo%2Fsolve-hexo-searchdb-not-work.html</url>
    <content type="text"><![CDATA[有一天，突然Hexo的searchdb插件不能用了！！ 點擊搜尋後，會顯示載入中的動畫，可是一直都沒有載入 orz Hexo的搜尋文章功能，是建立一支xml檔上面的，叫做search.xml 打開瀏覽器，進入到這個xml檔的路由，看看到底發生什麼事情：localhost:4000/search.xml 這時候畫面居然提示：Input is not proper UTF-8, indicate encoding ! 怎麼可能會有非UTF-8的特殊字元呢@@？ 查遍了所有文章，都找不到非UTF-8的字元，真的是非常的神奇。 解決方法這時候突然靈機一動，想說會不會是VS code沒有顯示出非UTF-8的字元。 於是用Sublime text打開專案，果然就在字裡行間發現了一個東西長成這樣&lt;0x40&gt;。 也不知道怎麼冒出這個這東西的，總之刪掉了就好了…… orz 如果你Hexo searchdb的功能也不能用的話，試試看這招吧！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo searchdb</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Activeandroid在SDK26之後會遇到的bug]]></title>
    <url>%2FAndroid%2Fandroid-failed-to-find-provider-null-for-user-0.html</url>
    <content type="text"><![CDATA[在Room出來之前，activeandroid是最受歡的ORM之一。 在業界還是很容易碰到維護案裡，使用activeandroid。 可是在Android SDK 26之後，activeandroid會出現一個bug。 會出現下列的錯誤訊息：Error saving model java.lang.SecurityException: Failed to find provider null for user 0; expected to find a valid ContentProvider for this authority 這時候要怎麼解決這個問題呢？ 既然錯誤訊息說沒有contentprovider，我們就加一個上去吧！ 打開專案的AndroidManifest.xml檔，在aaplication tag 之間貼上下列的程式碼，就可以修好這個bug啦！ 123456&lt;provider android:name="com.activeandroid.content.ContentProvider" android:authorities="&lt;你的專案package name&gt;" android:enabled="true" android:exported="false"&gt;&lt;/provider&gt; 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>android-plugin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo文件永久連結設定的BUG順便談SEO]]></title>
    <url>%2FHexo%2Fhexo-permalink-bug-and-seo.html</url>
    <content type="text"><![CDATA[永久連結(permalink)在SEO中是非常重要的因素，這關乎你的網站能不能被容易被排名到前面。 在設定Hexo的永久連結時，按照官方文件做，結果卻遇到一個bug。 這篇文章最後會分享怎麼解決這個問題。 先談時間格式和SEO一個好的永久連結絕對不能超過三層，不然SEO的排名會比較後面。 像是www.test.com/article/2019/01/01/page.html 這種很多層的網址，就比較難有好的SEO表現。 （當然如果你這篇很多層的文章流量超高，SEO也是會排名比較前面啦！） 一般來說，網址會盡量不要超過三層，而日期這種型式的永久連結，就剛好會讓你網址超過三層。 再者，如果網址裡有日期的話，隨著時間的推移，Google漸漸下調你文章的排名。 雖然有的文章是不受時間影響的經典之作，但是就是Google的機制，也沒有辦法。 所以在設定Hexo永久連結時，建議要先把日期格式給改掉。 內容分類和SEO如果一個網址長得像這樣 www.test.com/cloths/men.html ，一眼就能看出這個頁面的分類屬於服飾類，而且還是男裝。 Google的爬蟲也是一樣的，這種分類清楚的網址，特別容易有較好的SEO表現。 所以在設定Hexo永久連結時，建議使用分類的格式。 而且文章的命名，也要清楚直接，讓人一看就知道這個網址可能是在講什麼主題。 記得字和字之間用dash - 來分開，不要用underscore _，Google有說過dash是比較好選擇。 切記之後就不要再改文章分類了，不然會嚴重影響SEO Hexo文件的BUG和解決之道談完了以上的內容，就是要設定Hexo的永久連結啦！ 按照文件，我要的永久連結格式是 分類/文章名稱，應該設定為 :category/:title 可是這樣子設定之後，卻沒辦法進去文章閱讀 @@ 反而會將整個文章頁面下載下來，打開那個下載檔，裡面是該文章頁面的內容……。 要修正這個問題，只要將 :category/:title 改成 :category/:title.html 就可以啦！！ 如圖所示，加上.html即可 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[為什麼選用Hexo來寫部落格]]></title>
    <url>%2FHexo%2Fwhy-choose-hexo.html</url>
    <content type="text"><![CDATA[在Evernote寫技術筆記很多年了，最近因為想寫技術部落格，於是開始來尋找部落格的架站平台。 原本想說用熟悉的Wordpress，可是想到主機商的費用和搬遷的不便性，就決定使用時下最熱門的Static Site Generator啦！ 目前Static Site Generator現在有三個最活躍的技術，分別是：Jekyll、Hugo、Hexo。 一開始在決定要用哪個技術時，其實考慮了很久。於是把各家的好壞都寫出來，讓大家參考。 Jekyll的好與壞Jekyll是Github自家品牌的Static Site Generator，有著強力後盾做為支援。 可是它是使用Ruby來達成的。 大家都知道Ruby在Windows環境下的支援度不太夠，雖然我是用Mac，但還是很常用Windows的環境來做開發。 再來是Ruby相對比較慢，看了許多部落格主的心得，文章多了之後，在建置網站時真的會花上幾分鐘的時間。 雖然後來incremental regeneration，能夠大幅加速，但是考量到常常使用Windows，加上和Ruby不熟，還是放棄它了。 Hugo的好與壞Hugo是用Go語言來達成的Static Site Generator，目前github上面的星星數已經超過Hexo了。 Hugo的特色是生成靜態網站的速度極快！官網號稱它是世界最快的！！ 原本我一度就要使用Hugo來架站了，可是發現Hugo的插件和主題，相對比較少。 而且居然還沒有上到1.0版，反觀Hexo都3.8版了。 於是就暫時放棄使用Hugo啦，未來的某一天，Hugo更成熟的話，說不定會改用Hugo吧？ Hexo的好與壞Hexo是用Nodejs去完成的，生成的速度也是很快，不過的確還輸給Hugo一截。 實測Hugo1秒內就能建置完三篇文章的內容，Hexo要花4秒多。 雖然Hexo慢了一點，但是Hexo已經出來很多年了，周邊插件和社群活躍度都很高，主題選擇性也很廣。 而且我對於Nodejs相關的生態系比較熟悉，到時候要自己改些什麼東西也比較方便。 最後讓我選擇Hexo的臨門一腳，是Next這個主題，其配色是黑和白，相當符合大魔術熊貓工程師的意象 XDDD 最近再自己加上代表竹子的綠色，更有熊貓的感覺啦！！ 附帶一提，Hexo是台灣人做的哦！在中國那邊的社群也是很活躍，因此中文資源也還滿多的。 以上就是三大Static Site Generator的分析啦！ 接下來會再分享一些使用Hexo時踩到的坑。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo Next theme</tag>
        <tag>Wordpress</tag>
        <tag>Static Site Generator</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正確使用GPIO cleanup()方式]]></title>
    <url>%2FRaspberryPi%2Fcorrect-way-to-use-GPIO-cleanup.html</url>
    <content type="text"><![CDATA[在以Python寫樹莓派GPIO的時候，範例程式常常會在最後一行加上GPIO.cleanup()，讓程式結束時可以把GPIO的設定清掉。 最近在開發時，發現明明都已經加上了GPIO.cleanup()，但是設定還是都清不掉……。 GPIO一旦沒有清掉，在跑同一隻程式時，會出RuntimeWarning: This channel is already in use, continuing anyway. Use GPIO.setwarnings(False) to disable warnings. 這樣子的一段警告。 此時只能重新開機，才能重置GPIO。可是重新開機很麻煩啊，該怎麼辦呢？ 問題點在哪裡？首先我們先來看看問題點在哪？ 一般的範例程式，都是這麼寫的： 1234567while True: GPIO.output(LED_PIN, GPIO.HIGH) print("燈亮啦！")GPIO.cleanup() 上面的程式碼，明明在最後一行加上了 RuntimeWarning: This channel is already in use, continuing anyway. 可是按下 CTRL + C 中止之後，再跑一次程式，還是會得到 RuntimeWarning: This channel is already in use, continuing anyway. 的警告 因為 GPIO.cleanup() 在 while 迴圈外，所以根本不會執行到啊！！ 解決方法那麼我們該如何解決呢？ 只要善用例外處理的 try except finally 的技巧，就可以讓 GPIO.cleanup() 順利運作啦。 正確使用GPIO.cleanup()方式的範例如下： 1234567891011121314151617try: while True: GPIO.output(LED_PIN, GPIO.HIGH) print("燈亮啦！") except KeyboardInterrupt: # 當你按下 CTRL+C 中止程式後，所要做的動作 print("STOP") except: # 其他例外發生的時候，所要做的動作 print("Other error or exception occurred!" ) finally: GPIO.cleanup() # 把這段程式碼放在 finally 區域，確保程式中止時能夠執行並清掉GPIO的設定！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版按愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>RaspberryPi</category>
      </categories>
      <tags>
        <tag>IOT</tag>
        <tag>GPIO</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三波長燈管真的很亮]]></title>
    <url>%2FElectrician-plumber%2F20190406-hi-vision-lamp-is-good.html</url>
    <content type="text"><![CDATA[最近因為覺得工作室的燈光實在太暗了 除了工作時會想要睡覺之外，還會被螢幕的光線弄得很刺眼 於是來研究如何讓日光燈管更亮 爬了一下文，所謂的T5、T8、T9等等常見的名詞，指的其實是燈管的直徑，和照明的亮度關係不太大 比較重要的一點是，三波長燈管，遠比舊型的螢光燈管還要來得亮 也就是說，我只要換成三波長燈管，就可以讓工作室更亮囉！ 該怎麼買三波長燈管呢？很簡單，只要先看你的目前燈管的型號，然後再GOOGLE對應的型號就可以啦 以我原本的燈管為例，原本的型號是 FL20D/18 上網查了一下同規格的三波長燈管型號為 FL20/18D-EX 而且包裝上就寫明了這是三波長燈管，就可以直接買回家安裝啦！ 工作室裝上三波長燈管之後，再也不用額外開檯燈了呢！！註：T8和T9燈管，現在大部分都是三波長燈管啦]]></content>
      <categories>
        <category>Electrician_plumber</category>
      </categories>
      <tags>
        <tag>水電工</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[關於KoKo Mexcelsa]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[為什麼會想把這個技術部落格，取名為大魔術熊貓工程師呢？ 做為一個接案工程師，其實就像是魔術師一樣，客戶提出的要求，總是要像變魔術一樣把它變出來。 熊貓大概是我最喜歡的動物了。每次看到熊貓的傻傻呆萌的影片，受傷的心靈都被療瘉了！！ 熊貓命名有個大原則，就是用疊字。例如說團團、圓圓。剛好我的名字是KoKo，黑眼圈也很重XDD 中華一番裡樓麟艦的料理對決很精采。 為什麼不在Evernote上寫技術筆記了？ 還是一直在Evernote上寫技術筆記。Evernote的功能超強大，尤其是搜尋功能，都能準確的找到寫過的筆記，真的超神！ Evernote除了不支持md語法外，最大的缺點就是筆記是寫給自己看的，不像技術部落格的筆記是寫給全世界的人看。 我還是持續使用Evernote，不過寫的內容比較像是草稿。對外發表的技術筆記會整理過，才會分享在大魔術熊貓工程師。 多年來已經累積有上百篇的Evernote技術筆記，會再慢慢整理，分享給全世界。所以有時候可能會一天內發表很多文章。 工程師的社交圈很看重技術部落格。為了不要當邊緣人，只好逼著自己寫部落格 XDD 為什麼這個技術部落格的主題包羅萬象？ 接案工程師的工作性質，本來就會遇到各式各樣的難題。能夠把客戶的困難解決，才是優秀的工程師。 我是雙子座AB型，所以喜歡涉獵各種面向的知識。 身為一個潮男，走在技術的尖端也是很合理的。 作過些什麼專案呢？ 從硬體玩到軟體，從後端玩到前端，從Android玩到iOS，從物聯網玩到AI。 作品集網站，不過有些幫客戶做的太敏感的，就不克放上來啦！]]></content>
  </entry>
  <entry>
    <title><![CDATA[categories]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
</search>
