<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[有一種肥，叫做通勤肥]]></title>
    <url>%2FCoding-Life%2Fcommuter-fat.html</url>
    <content type="text"><![CDATA[最近我又胖得不成人形了，仔細檢討了之後，發現我的肥胖是通勤造成的。 這篇文章就來仔細分析一下通勤肥。 通勤肥的故事幾年前我還在紐西蘭工作的時候，每天都是開車上下班。 紐西蘭的路很大條，車又少，每天只要開十來分鐘就可以上下班了。 下班之後還有時間自己煮，而且還有時間運動。 所以那時候很瘦，過得很健康。 有一陣子我肥胖到頂峰，那時候在中科的一間小軟體公司上班。 每天要穿過塞車得很可怕的中港路上下班，去程快一小時，回程超過一個小時。 每天花兩個小時上下班，都沒有時間自己煮了，也更難擠出時間來運動。 那時候真的是胖到83公斤，是生涯頂峰，身體也是最差的時候。 後來自己接案兩年，這兩年大部份時間都在家裡工作，偶爾跑跑業主。 這也是我最健康的時候，體重70公斤，每天自己煮又能跑健身房運動。 身體健康也會讓工作效率很好，因此這兩年的產出很高。 最近的體重已經超過了生涯頂峰，來到了85公斤了。 我每天通車到豐原上班，來回也是兩個小時。 而且要更早起床，因此睡眠的時間更短。 沒有時間自己煮，也沒有時間去運動，體重就直線上升突破天際了……。 通勤肥的結論通勤肥是真的存在的。 通勤時間會消耗掉你的煮飯時間，只能吃外食，因此容易攝入過多的熱量導致肥胖。 通勤時間也消耗掉你的運動時間，缺乏運動，因此體重直線上升、飆破天際。 建議軟體工程師們在找工作時，還是要考量工作地點的距離，盡量避免通勤時間過長。 技術和薪資只是一時的，身體健康才是永遠的。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Coding Life</category>
      </categories>
      <tags>
        <tag>通勤肥</tag>
        <tag>工程師職業傷害</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[開箱 Microsoft MVP Award]]></title>
    <url>%2FCoding-Life%2Funboxing-microsoft-mvp-award-kit.html</url>
    <content type="text"><![CDATA[當選微軟最有價值專家後，微軟會寄一個 Microsoft MVP Award 禮包給獲獎者。 這篇文章就來開箱 Microsoft MVP Award，看看裡面有些什麼東西吧！ 先從報關開始微軟是透過FedEx寄送的，7/13晚上收到FedEx來信，要求我填寫報關資料。 主要是填寫個案委任書，委託FedEx協助報關。 FedEx的email裡有個案委任書的範本，可以參考範本填寫。 最重要的三點是： 本人親筆簽名 分提單號碼要寫對 身份證正反面影本 填寫完畢後回傳給FedEx，FedEx就會協助包裏通關囉！ 也可以用政府的報關APP，易利委（Ez Way），這個APP很簡單直觀，看到介面就大概會操作了 XDDD 關於易利委（Ez Way）的操作，可以參考 James Tsai 大大的文章。 開箱 Microsoft MVP Award回傳委任書之後，一天就收到包裏了，FedEx真的很有效率。 馬上就來開箱吧！ 盒子外觀 可以看到盒子正面的左上角寫著2020-2021，我是這個期間的MVP。 盒子側面印著 Microsoft MVP 的 LOGO。 盒子的開啟面就把獎項的全名印出來了。 內容 盒子一打開，就看到當選Microsoft MVP的證書了，也有註明是AI領域的。 上面還有大大的Thank you，感謝您過去一年對技術社群的貢獻。 側面還有MVP專屬的ID卡和胸章，如果未來有機會去西雅圖，就派得上用場了！ 下面的盒子打開來，就是MVP的獎座啦！！ 可以把獎座拿出來，組合上去。 明年又連任MVP的話，又會拿到一個小指環，可以愈疊愈高 XDD 最下面還有一些信件和貼紙，可以貼在筆電上面了 XDDD。 以上就是 Microsoft MVP Award 禮包的內容啦！ 今年還是要繼續跑社群寫文章，希望明年有機會續任，讓小指環愈疊愈高！！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Coding Life</category>
      </categories>
      <tags>
        <tag>Ko Ko Microsoft MVP</tag>
        <tag>柯克 微軟最有價值專家</tag>
        <tag>Microsoft MVP Award Unboxing</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[申請 Microsoft MVP 的心路歷程]]></title>
    <url>%2FCoding-Life%2FKo-Ko-is-awarded-Microsoft-MVP.html</url>
    <content type="text"><![CDATA[沒想到我居然拿到了 Microsoft MVP 的獎項了！！ 這些年來努力練技術，用力做演講，居然得到了認可 QQ 這篇文章就來分享一下申請MVP的心路歷程。 這些年來我一直致力於技術社群的演講、參與技術社群、寫部落，希望提高自己的實力並爭取更多機會。 無意間和恩師 James Tsai 聊到 Microsoft MVP 這個獎項，才知道原來我這些年的努力，可以試著申請看看MVP。 決定開始申請 Microsoft MVP 之後，就要開始來整理自己這些年做了什麼樣子的活動。 我把這些年來所有做過的演講表列出來，放在工作室的官網裡面，每個演講的項目都可以點擊進去專屬頁面，看進一步的細節。 這些專屬頁面，都有放上照片，還有演講活動網頁的連結。 有一點很重要的是，要把活動網頁連結的內容截圖下來，避免該連結後來失效而沒有內容可以做認證。 可以參考： https://kokomexcelsa.github.io/kokoweb/speech.html#portfolio-speech 然後跑了快半年的申請流程、寫了很多英文、填了很多資料、和微軟大中華地區的PM信件來來回回了二十幾封，最後在五月底終於把所有的資料確認了下來。並且告知我這一梯會在七月一日揭曉結果。 但是在端午連節的最後一天，我在清水服務區吃飯時，就先收到了微軟大中華地區PM的來信，請我加入MVP們的群組，但是正式訊息還是要等七月一號由美國微軟總部發信。 在七月一號晚上十點多，就收到了美國微軟總部的通知，告訴我已經選上 MVP 了！！ Microsoft MVP 不是微軟的員工，根據微軟MVP官網(網址)的定義： 「Microsoft 最有價值專家 (或 MVP) 是與社群熱情分享其知識的技術專家。他們總是走在「時代尖端」並不斷學習新穎的科技技術。他們深入了解 Microsoft 產品和服務，並同時將各種平台、產品和解決方案整合在一起來解決真實世界問題。由 MVP 組成的全球社群包含 90 個國家/地區 4,000 多位技術專家和社群領導者，這些人的熱情、社群精神和求知心推動著整個社群。除了出色的技術能力，最重要的是 MVP 總是願意協助他人，所以才與眾不同。」 很感謝微軟給了我這樣子的肯定。 也要感謝恩師james tsai，在我軟體生涯最迷茫的時候指點了我一條道路。 再來還要感謝各大社群的工程師朋友們，跟你們交流切磋技術真的是很開心很快樂，以後也要繼續一起練功！ 最後要感謝我最愛的未婚妻，在每個應該要約會周末與夜晚，我仍然在練技術寫文章跑社群做演講。 要不是妳的包容，我也不會拿到這樣的國際級獎項 QQ，最愛妳了！！！ 拿到 MVP 獎項只是開始，今後也是要繼續努力練技術，用力蹭熱度！！ 最後放個 MVP 頁面的圖。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Coding Life</category>
      </categories>
      <tags>
        <tag>Ko Ko Microsoft MVP</tag>
        <tag>柯克 微軟最有價值專家</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Azure 的 Computer Vision 程式範例]]></title>
    <url>%2FAI%2FAzure-Computer-Vision-Program-Sample.html</url>
    <content type="text"><![CDATA[現在 AI 影像辨識已經很成熟了，各大軟體廠都有提供相關的服務可以使用。 今天要介紹的是微軟 Azure Cognitive Service 之下的 Computer Vision。 這個服務是有免費額度的，這篇文章就帶大家一步一步的寫 Azure Computer Vision 的程式吧！ 不過首先，要先做好 Azure Computer Vision 的設定，可以參考這篇文章。 程式撰寫建立主控台應用程式打開 Visual Studio 2019，或是要使用其他的版本也可以。不過都2020年了，升級一下吧 XDDD。 接著我們建立新的專案，這邊我們選擇 .NET Core 的主控台應用程式。 安裝必需套件我們打開 NuGet 套件管理員，輸入 Microsoft.Azure.CognitiveServices.Vision.ComputerVision 我們要安裝的就是這個套件。 如圖所示，第一個就是了。 記得選擇穩定版的，比較不會有意外狀況發生。 開始寫程式還記得這篇文章中，談過的 key 和 endpoint 嗎？ 我們要把拿到 key 和 endpoint，用來建立連線：1ComputerVisionClient client = new ComputerVisionClient(new ApiKeyServiceClientCredentials(key))&#123; Endpoint = endpoint &#125;; 接著建立主要的偵測影像的method，我們就用偵測色情圖片，來測試Computer Vision這個服務的威力吧：123456789101112131415161718public static async Task DetectPorn(ComputerVisionClient client, string imgUrl)&#123; // 建立回傳的features的list，這裡使用Adult List&lt;VisualFeatureTypes&gt; features = new List&lt;VisualFeatureTypes&gt;() &#123; VisualFeatureTypes.Adult &#125;; Console.WriteLine($"分析圖片 &#123;imgUrl&#125;..."); Console.WriteLine(); ImageAnalysis results = await client.AnalyzeImageAsync(imgUrl, features); //分別列出成人內容和猥褻內容 Console.WriteLine($"含有成人內容: &#123;results.Adult.IsAdultContent&#125; 可信度 &#123;results.Adult.AdultScore&#125;"); Console.WriteLine($"含有猥褻內容: &#123;results.Adult.IsRacyContent&#125; 可信度 &#123;results.Adult.RacyScore&#125;"); Console.WriteLine();&#125; 測試結果我們把要測試的圖片的 URL，送給這個 method，就可以來判斷這個圖片是不是色情圖片啦！ 請看這個截圖，為了避免問題，我把色情圖片的 URL 剪掉了，大家可以自行找圖來測試。 可以看到，我們剛剛的測試照片，真的被判定為成人內容呢！ 描述圖片的功能也可以使用 VisualFeatureTypes.Description，來描述這張圖片的內容：1234List&lt;VisualFeatureTypes&gt; features = new List&lt;VisualFeatureTypes&gt;()&#123; VisualFeatureTypes.Adult, VisualFeatureTypes.Description&#125;; 然後再加上：12345Console.WriteLine("圖片描述:");foreach (var caption in results.Description.Captions)&#123; Console.WriteLine($"&#123;caption.Text&#125;");&#125; 天啊，這個圖片描述太可怕了，不便放上來，大家就自己測試吧（怕.jpg 其他Computer Vision的功能其他還可以取得 Categories，Tags，Objects，Brands，Faces等等的功能。 只要把這些選項，放在範例程式碼的 features 中，就可以再多辨識影像其他的內容囉！ 舉例來說，你要做物件偵測，那麼就可以加入 VisualFeatureTypes.Objects，就能做物件偵側啦！ 這個物件偵測，我們之後可以再寫一篇。 最後大家應該會要問，什麼是成人內容，什麼是猥褻內容呢？ 根據微軟的文件，成人內容是指裸體和性行為的內容，而猥褻內容是具有暗示性的影像。 大家可以試著放比基尼相關的照片，看結果就知道兩者之間的差異了。 另外還有一個新的是 isGoryContent ，這個是血腥的內容。 不過我這麼純真善良、連冰與火之歌都不敢看的工程師，就先來測試血腥內容的照片啦！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>Computer Vision</tag>
        <tag>Azure Cognitive Service</tag>
        <tag>Azure 認知服務</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Azure 的 Computer Vision 服務設定教學]]></title>
    <url>%2FAI%2FAzure-Computer-Vision-Tutorial.html</url>
    <content type="text"><![CDATA[現在 AI 影像辨識已經很成熟了，各大軟體廠都有提供相關的服務可以使用。 今天要介紹的是微軟 Azure Cognitive Service 之下的 Computer Vision。 這個服務是有免費額度的，這篇文章就帶大家一步一步的設定 Azure 吧！ 第一步首先進到 Azure Portal，找到 Azure Cognitive Service。 Azure Cognitive Service 中文叫做認知服務，如果是用中文版 Azure 的朋友可以用認知服務這個詞來找。 第二步點進到 Azure Cognitive Service 之後，可以看到這項服務的 dashboard。 如果之前有新增過服務的話，也會出現在列表上面。 進到這個畫面後，我們點擊左上角的 Add。 第三步接著會進到 Marketplace 裡面，這裡有許多 Azure Cognitive Service 相關的服務。 也有一些是第三方廠商上架的服務，整個和 AWS 很像。 這時候在上方的搜尋bar裡，輸入computer vision，中文的使用者可以輸入電腦視覺。 這時候跳出的第一個選項，就是我們要的服務囉！ 第四步點擊 Marketplace 出來的第一個computer vision之後，就會進到這個頁面，這時候選擇紅色框框起來的Create。 第五步這時候我們就來做設定啦！ 請看圖片 第一個 Name 會決定你endpoint URL，所以要是唯一的。 第二個 Subscription 就選擇免費版的，或是免費已過期就用付費版的訂閱。 第三個地點，就盡可能選離你服務比較近的地方，台灣可以選Japan East。 第四個 Pricing Teir，選免費的額度，會有每分鐘20個呼叫、每月5000個呼叫的額度。 第五個 Resource group 就選擇您想要的資源群組吧！要新建一個也是可以。 最後按下 Create。 第六步Create 點下去之後，需要等待一段時間。 等創建完成了之後，我們點擊進來剛剛創建的資源，就會可以看這個 computer vision 服務 dashboard 了。 大家可以在這個頁面探索一下，有哪些可以操作的。 不過我們直接接入重點，請點擊左方選單的 Keys and Endpoint。 點進去後，我們就可以看到如圖所示的 Key1 、 Key2，還有 Endpoint 了。 Key1 Key2都可以做為連結到這個 Computer Vision 服務的key。 也可以點擊圖片中的 Regenerate 按鍵，來產生新的key。 最後一步Azure Computer Vision 設定就到此結束啦！！ 記下這個 key 和 endpoint，下一步我們就可以開始寫程式了。 關於程式的教學與說明，就請移駕到這篇文章。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>Computer Vision</tag>
        <tag>Azure Cognitive Service</tag>
        <tag>Azure 認知服務</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用 Azure 快速部署與開發 LINE bot]]></title>
    <url>%2FChatBot%2Fdeploy-develop-linebot-on-azure.html</url>
    <content type="text"><![CDATA[這是2020/04/21 在ChatBot Meetup 所分享的內容。 本次演講主要聚焦把開速部署和開發LINE bot，介紹app service、blob，以及微軟自然語言工具 LUIS。 本次演講是在線上直播的live demov，迴響超熱烈，被問了許多問題。 讀者可以看著投影片的內容，看看Azure有什麼可以快速開發Line Bot 的威力。 用 Azure 快速部署與開發 LINE bot from Ko Ko 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>ChatBot</category>
      </categories>
      <tags>
        <tag>slides</tag>
        <tag>LINE bot</tag>
        <tag>Azure Bot Service</tag>
        <tag>LUIS</tag>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[簡介Wordpress部署在AWS上的幾種架構]]></title>
    <url>%2FAWS%2Fdeploy-wordpress-on-aws.html</url>
    <content type="text"><![CDATA[這是2020/02/16 在Wordpress台中小聚所分享的投影片。 本次演講主要聚焦把Wordpress部署到AWS架構上的設計，介紹了便宜適合部署 Wordpress 的方案，也介紹了適合 Wordpress 水平擴展的架構。 本次演講的迴響超熱烈，大家一直討論不停，感到相當開心。 讀者可以看著投影片的內容，理解幾種Wordpress部署到AWS架構，其中比較重要的兩項是 Lightsail 和 Elastic Beanstalk。 簡介Wordpress部署在AWS上的幾種架構 from Ko Ko 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>AWS</category>
      </categories>
      <tags>
        <tag>slides</tag>
        <tag>Wordpress</tag>
        <tag>lightsail</tag>
        <tag>elastic beanstalk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[20年前，寫程式的起點]]></title>
    <url>%2FCoding-Life%2Fthe-origin-of-coding-life.html</url>
    <content type="text"><![CDATA[今年過年因為新冠肺炎的關係，沒有出去走春 打打麻將之外的日子，就是整理房間 結果意外翻出了一本書，這本書就是我20年前開始寫web所買的書：純手工打造–黃金網頁。 20年前的我還是個國中生，開始在用FrontPage在寫網頁，那個年代許多人都想要做一個自己的「烘焙雞」（Homepage）。 當時我就做了一個自己的網站，叫做「豬豬的第一個家」，裡面主要收集各種 Javascript 的特效，還有一些惡意的 Javascript 程式（例如說一直跳出 alert 讓你關不完的那種）。 跑馬燈效果是那時候最流行的特效之一，記得我還做了一個跑馬燈生成器，可以客製化自己想要的跑馬燈。 可惜這個網站隨著電腦的搬移，就再也找不到原始程式碼了。 然後過沒多久，就發生了.com泡沫，資訊業就開始走下坡了 orz 記得這本書是在一個書展裡買的，那個活動是三本書1000元，可是我只想要這本書。 於是還是國中生的我，就到處問人，有沒有人要一起湊三本打折，我可以多付那個一塊錢。 問了好久，好不容易問到一個大葛格，他要買兩本遊戲攻略，剛好可以跟我湊三本1000元。 那個大葛格還問我怎麼不玩電腦遊戲，我當時回答還是寫網站就是我的電腦遊戲 XDDDD。 這是這本書的封面，JAVA特效這個詞一看就有問題 XDDD 這張是書的版權頁，2000年11月出版的書，距今快要20年了 這本書買回家之後，就開始按照裡面的內容學習。 記得當時最討厭寫CSS，覺得做出想要的畫面好累，到現在即使有了SCSS這麼給力的工具，我還是最不喜歡做切版這件事 XDDDD 這本書做到後面，都是Javascript的範例，不過這本書很顯然的把 Java 和 Javascript 給搞混了。 那時候還小，也還真的分不清楚兩者之間的差異，15年後重拾程式這個技能，才知道原來狗和熱狗是不一樣的東西。 總之發現這本書真的又驚又喜，讓我想起了學生時代一頭栽進寫code的日子 如果那時候有繼續走資訊業這條路，不知道又可以走多遠呢？ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Coding Life</category>
      </categories>
      <tags>
        <tag>寫程式的起點</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[討論用 Azure Bot Service 開發 LINE bot]]></title>
    <url>%2FChatBot%2Fdiscuss-azure-bot-service.html</url>
    <content type="text"><![CDATA[近幾年 Line 聊天機器人爆紅，許多軟體工程師多少都會碰到聊天機器人的需求。 為了讓聊天機器人開發更方便，微軟推出了一項非常強大的工具：Azure Bot Service。 我試玩了Azure Bot Service之後，想來分享一些LINE bot開發心得。 Azure Bot Service 是微軟推出的一項聊天機器人服務，如其名是建構在 Azure 上面的一項雲服務。 可用於輪替簡單、重複性工作，例如預訂晚餐或蒐集設定檔資訊。 使用者可使用文字、互動式卡片和語音來與 Bot 交談。 和 Bot 互動可以是快速的問與答，用 Rule-base 的方式來建立簡單規則。 也可以配合使用 LUIS ，建立複雜的對話機制。 總而言之，和聊天對話相關的，我們都可使用 Azure Bot Service 很輕鬆的辦到。 現今市場上的 Line Bot，多是以 LINE Front-end Framework (LIFF) 為主的方式來呈現的。 LIFF 簡單來說，就是做一個網站在 Line Bot裡面，透過 Line 的 library 和網站做互動。 同時也會搭配 Rich Menu 、ImageMap 等方式來呈現，讓使用者只需要點擊按鈕就可以達到使用目的。 Azure Bot Service 裡面也是有提供了類似的功能，如互動式卡片之類的，也是可以串接到 Line 上面。 Azure Bot Service 裡面，也包含了一個 app serivce。 App service 就是一個host服務，可以部署你的網站上去。因此我們就可以用 LIFF 的方式，來製做我們的 Line Bot。 有了LIFF、Rich Menu、ImageMap 等等和 user 互動的形式，使用自然語言對話的場合就比較少了一些了。 終究打字還是會比按按鈕來得麻煩一些。 但是如果真的有需要使用自然語言對話的方式來和客戶互動，例如客服之類的bot，就可以使用微軟的自然語言工具 Language Understanding Intelligent Service (LUIS) 來達成。 當然 Azure Bot Service 可以開一個 LUIS 起來做串接。 總之，Azure Bot Service 包含了許多現在開發 Line Bot 很重要的幾項功能，真的很不錯。 我當年做通勤學的時候，只用了一個 app service，幹出了一大堆功能，現在想想真的血汗 XDDD 。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>ChatBot</category>
      </categories>
      <tags>
        <tag>LINE bot</tag>
        <tag>Azure Bot Service</tag>
        <tag>LUIS</tag>
        <tag>NLP</tag>
        <tag>LIFF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[業界都在用的自然語言理解工具，教你快速建構Line對話機器人]]></title>
    <url>%2FChatBot%2Fdialogflow-and-luis-in-AIA.html</url>
    <content type="text"><![CDATA[這是2020/01/03 在台灣人工智慧學校所做的手把手實做課程投影片。 主要在是Dialogflow 與 Line Bot的教學，並且介紹 Dialogflow 和 LUIS 的差別。 演講完畢後許多同學都做出自己的Line Bot，反應熱烈，提問討論超久。 可以看著投影片內的截圖以回憶課程，一步步打造自己的聊天機器人。 業界都在用的自然語言理解工具，教你快速建構Line對話機器人 from Ko Ko 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>ChatBot</category>
      </categories>
      <tags>
        <tag>slides</tag>
        <tag>LINE bot</tag>
        <tag>LUIS</tag>
        <tag>NLP</tag>
        <tag>Dialogflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用Intent在Android APP中打開其他app]]></title>
    <url>%2FAndroid%2Fandroid-app-jump-to-other-app.html</url>
    <content type="text"><![CDATA[Android開發者常常會碰到，在Android APP內打開其他APP的需求。 只要善用 Intent，就可以達成這個需求啦！ 這段程式碼示範了如何打開其他的APP。 在客服的需求，很常會需要打開FB Messager，因此本篇示範如何打開FB Messager到特定的頁面。 注意你的手機需安裝FB Messager。 Uri.parse的部份可以可以自行替換成其他的APP Scheme，也就可以跳轉到其他APP了。 1234567891011try&#123; startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("http://m.me/111417983616253"))); //開啟大魔術熊貓工程師的粉絲專頁Messager&#125;catch (ActivityNotFoundException ex)&#123; Toast.makeText(getContext(), "無法打開Facebook Messenger APP", Toast.LENGTH_SHORT).show();&#125; 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android Intent</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何將terminal印出的log存成txt檔]]></title>
    <url>%2FLinux%2Fsave-terminal-log.html</url>
    <content type="text"><![CDATA[這篇文章就當2020年的第一篇文章吧！ 軟體工程師在開發程式時，會常常會將讀取到數值在terminal印出來 有時候印出的數值量太大，很不方便在terminal裡仔細看這些資料，或是還需要其他的分析工具來分析 這時候就會需要把terminal印出的數值儲存起來的功能 在開始跑印log的程式之前，先在terminal裡使用這個指令 1$ script output.txt 這時候你的資料夾內就會多出了一個output.txt的檔案，印出的log就會存在這個檔案裡囉！ 在你log印完了之後，再輸入這個指令做結束 1$ exit 這樣子就可以把terminal裡印出的log存檔起來，就可以做後續的分析或操作啦！！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>將terminal印出的log存檔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自然語言理解的 Line 機器人實戰]]></title>
    <url>%2FChatBot%2Fdialogflow-and-luis-in-AT-Tech.html</url>
    <content type="text"><![CDATA[這是 2019/12/28 在AI Tech社群，於微程式夢森林分享的投影片。 主要是手把手教大家 Dialogflow 與 Line 串接的使用，並且介紹 Dialogflow 和 LUIS 的差別。 課後有許多同學做出自己的 Line Bot，反應熱烈，提問討論超久。 可以看著投影片內的截圖，一步步打造自己的聊天機器人。 自然語言理解的 Line 機器人實戰 from Ko Ko 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>ChatBot</category>
      </categories>
      <tags>
        <tag>slides</tag>
        <tag>LINE bot</tag>
        <tag>LUIS</tag>
        <tag>NLP</tag>
        <tag>Dialogflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[埔鹽順澤宮三鐵冠軍帽開箱文]]></title>
    <url>%2Faccessories%2Fchampion-hat.html</url>
    <content type="text"><![CDATA[不可否認地，運氣是接案軟體工程師最重要的部份之一。 看到伊登先生拿到世界三鐵冠軍，又看到朋友的公司奇步應用去拜訪了埔鹽順澤宮之後，得到了創業冠軍又去日本參訪，因此深深相信這間廟的靈驗。 於是找個風和日麗的上午去埔鹽順澤宮領取冠軍啦！ 如何領取冠軍帽每個月發冠軍帽的遊戲規則都不太盡相同，建議直接去埔鹽順澤宮官方臉書頁面查詢。 其他的注意事項1. 早點去排隊。我是在發帽子開始前一個小時去排隊的，那時候大約就排在150個左右（用肉眼數的）。還聽說很多在地鄉親早上七點就去邊吃早餐邊排隊。因此建議早點去排隊。 2. 準備水和防晒排隊會等很久，我排150個，開始發放後半個多小時才領到帽子，真的差點變成人乾。因此建議要準備水和防晒的傘或其他防晒道具。 3. 車子停遠一點車子不要開到廟口再找停車位，絕對會找不到車位，建議停遠一點再走過去。我是停在附近的小路邊，再奔跑過去排隊。 4. 一定要拿到牌子 在發放帽子前十分鐘，他們會先依排隊順序發牌子，牌子是沒有號碼的。 開箱文開始過香爐 拿到冠軍帽第一件事情，一定要過香爐三圈。這和領取廟的平安米或護身符，都是同樣子的道理。 正面 正面就寫著埔鹽順澤宮五個大字，是上膠的不是刺繡的。 背面 背面必須要蓋有「埔鹽順澤宮北極玄天上帝金印」的，才正版的埔鹽順澤宮三鐵冠軍帽。 後面調整帽寬的部位是用魔鬼沾做的。 附近的裝置藝術 附近還有三鐵冠軍帽的裝置藝術，就來拍個大帽與小帽。 希望拿到這個帽子、拜了拜順澤宮後，接案可以順利一點啊 QQ。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>accessories</category>
      </categories>
      <tags>
        <tag>Unboxing</tag>
        <tag>埔鹽順澤宮冠軍帽</tag>
        <tag>三鐵冠軍帽</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AIA認同背包開箱文，兼談軟體工程師如何挑選背包]]></title>
    <url>%2Faccessories%2FAIA-backpack.html</url>
    <content type="text"><![CDATA[今年人工智慧學校年會–大時代的起點，首度推出了校友認同包。 背包造型配色相當符合AIA的設計，加上帥氣的陳昇瑋執行長所拍的宣傳照，引起了不小的騷動。 許多人就是衝著背包購票，加入這個大時代的起點。 小弟我身為校友兼講者，一定也有入手這個背包的。 廢話不多說馬上來開箱背包吧！ 最後再來談談軟體工程師如何挑選背包。 開箱文開始正面 包包整體色系的藍色，很符合人工智慧學校的LOGO。 右上角還印著小小的「台灣人工智慧學校」的文字，不會顯得太過招搖。 前面還有一個夾層可以讓你放東西。 AIA認同包還有防潑水，可以看到水滴在表面形成水珠。不過應該是下雨就要穿雨衣了，不是完全防水的。 裡面 包包裡面長這樣子。 主要夾層有筆電的隔間、平板的隔間、行動電源外接的電線、兩個小隔間和兩個裝筆隔間。 如果把手伸進筆電隔間的底層摸摸看，會發現底層也是有厚度的，相當符合筆電防撞的需求。 這個包包可以放入14吋的筆電。 此外還可以注意到背包上方有個手提的提帶，那個提帶相當堅固且柔軟，可以用手提著包包。 側面 左側面的水壺袋有個拉鍊可以拉開，網布有彈性，但是只能放下普通的保溫瓶，沒辦法放下大的水壺。 右側面還有一個拉鍊夾層，可以放一些單肩背包時要快取的東西。 右側面還有外接行動電源孔，以及一個側面隔間。這邊就沒有拉鍊可以拉開的網布了。 此外我們可以注意到背帶是減壓網布的設計，相當適合背電腦的工程師。 背面 令人又驚又喜的是，背面居然還有一個小隔間。可以放錢包或是其他較貴重要貼身的物品。 而且請仔細看背帶陰影較深的那個地方，那裡也是一個迷你小隔間哦！ 另外背面小隔間的上方有個橫向的提帶，那個不是要給你手提的，是要給你插在行李箱上方拉桿的。 背面這些小設計真的是太精采了！ 軟體工程師如何挑選背包1. 先確認你的筆電大小。如果你的筆電是16吋的Macbook Pro，那麼就要挑可以放入16吋Macbook Pro的背包。 2. 防潑水很重要。筆電是軟體工程師吃飯的工具，如果溼掉了就完蛋了，因此基本防潑水還是必需的。當然如果雨大的話，就還是只能穿雨衣了。 3. 有放平板的空間。很多人會把平板當成第二個外接螢幕，小弟我也是常常這麼做的。因此有放平板的空間也是很重要的。 4. 厚。與其說厚，不如說防撞擊。小弟我以前曾經背過一個很輕薄的背包，結果不小心包包掉到地上，Macbook Pro就撞歪了一角。因此厚包包才是我唯一的考量，而且要自備筆電內膽包。 5. 背帶要減壓且堅固。筆電是很重的東西，厚包包也是比較重的，因此背帶有減壓功能，可以讓你的路走更遠。而堅固更是重要，小弟我Macbook Pro就撞歪了一角的原因，就是背帶斷裂。 6. 夾層和隔間多工程師就是要帶一堆線材或是USB。夾層或隔間多可以讓你每個地方都放一個線材，就不會打結囉！放水壺和雨傘的隔間也是必要的哦！ 7. 外接行動電源孔。這點比較像是在外面跑的接案軟體工程師需要的。行動電源外接的電源孔能讓您在跑客戶時，也能幫手機充電，不會因此漏接客戶電話。 以上七點就是大魔術熊貓工程師在選筆電背包時會考量的事項啦！！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>accessories</category>
      </categories>
      <tags>
        <tag>人工智慧學校背包</tag>
        <tag>AIA校友認同包</tag>
        <tag>Unboxing</tag>
        <tag>軟體工程師如何挑選背包</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[工程師花一萬小時的努力？異數這本書根本不是這樣子寫的]]></title>
    <url>%2Fwork%2Fmyth-of-10000-hours-effort.html</url>
    <content type="text"><![CDATA[最近很常在網路上看到，軟體工程師要花一萬小時的努力，才能成該領域的專家。 一萬小時的努力這個數值，是引用作家麥爾坎．葛拉威爾（Malcolm Gladwell）所寫「異數」這本書。 比爾蓋茲在創辦微軟之前，已經寫了一萬小時的程式，所以才會成功。 網路上也聲稱一萬小時這個數字，是個奇異的數字，正是異數這本書的由來。 可是瑞凡，異數這本書根本不是這個意思，關於比爾蓋茲一萬小時的努力，也只是斷章取義！！ 在開始閱讀前先警告，這本書的內容非常黑暗，請做好心理準備 異數的意思首先我們先來看看異數這本書的英文名稱，Outliers: The Story of Success。 其中的outliers，在統計學上，指的是離群值的意思。也就是和其他數值有顯著差異的數值。 說什麼異數是奇異的數字，根本不是這樣子的！ 異數關於工程師1萬小時的相關重點生在年頭的人，比生在年尾的人還容易成功作者舉加拿大的青少年曲棍球聯賽，發現成功球員，都是在1，2，3月出生的。 研究後發現，年頭一月出生的甲男孩，和同一年年尾12月出生的乙男孩，因為有相差十二個月的生理發展差距，因此在運動表現上，年頭出生的孩子表現會比較好。 關於這一點，我深深有所體悟。 台灣的學制是9月份之後出生的都要到下個學年才能上學。 也就是說，8月份出生的會是同屆同學中最為年幼的。 而我就是8月份出生的。 從小我就感受到自己和同學之間的差距，無論在是學業成績或是體能表現，都難以趕上較為年長的同班同學。 關於同屆但較年長的學生，會有較好的表現這件事，書中也有提到有學者做過類似的研究。所以年頭年尾出生的孩子，在同儕間會有差距，是不爭的事實。 強者愈強，弱者愈弱同年但是較年長的孩子，因為做出了較好的表現，能夠得到更多的關心和資源，最終成為曲棍球名星。 年尾的孩子因表現較差而缺少關懷與鼓勵，漸漸的表現愈來愈差，最後退出曲棍球比賽。 社會學家羅伯特．金．默頓（Robert King Merton）將這種強者愈強，弱者愈弱的現象，稱為馬太效應（Matthew effect）。典故出自馬太福音中的經文：凡有的，還要加給他，叫他有餘；凡沒有的，連他所有的也要奪去。 同理，小有成就的人士，可以得到愈來愈多的成功機會，而失敗者卻會不斷墜入失敗的輪迴。 軟體工程師界的確也有強者愈強，弱者愈弱的現象。愈強的工程師能夠拿到大廠的資源和贊助，因此有更多的機會變得更強。而弱的工程師卻只能繼續做著碼農性質的工作，隨時會被新鮮的肝取代。 工程師1萬小時的努力作者麥爾坎引用了瑞典心理學K. Anders Ericsson的研究，發現卓越的小提琴手在20歲時，就已經累積到了1萬小時的練習了，而那些當音樂老師的，練習時間只有4千個小時。 後來作者又去研究了優秀的運動員、象棋選手、工程師，甚至是披頭四，能有傑出的表現都是因為有1萬小時以上的努力。 這就是1萬小時練習的由來。 可是作者麥爾坎又在這裡話鋒一轉，能夠達到10000小時這個標準的人，都有些特別的機運 作者麥爾坎先用比爾．喬伊做例子。 說到比爾．喬伊（Bill Joy），軟體工程師們應該都不陌生。他是昇陽（Sun）公司的創始人，也是Java的主要作者之一，BSD也是他開發出來。 1970年代，比爾喬伊剛進密西根大學的時候，密西根大學剛好引入了分時（time-sharing）系統的電腦，可以多個使用者同時對電腦下指令，而不是古老的、費時的打孔紙板下指令的方式。因此許多密西根大學生都可以使用電腦。 比爾喬伊因為這樣子的機緣巧合，沒日沒夜的寫程式，才可以有大量的累積1萬小時的編程經驗，才能成為領域中的卓越者。若是當時密西根大學還是打孔紙板的電腦，那麼可能打孔打了很多年，都還沒有辦法累積一萬小時的編程經驗。 作者麥爾坎也用比爾．蓋茲做例子。 比爾蓋茲的出生在西雅圖，眾所皆知他父親是有錢的律師，而母親是銀行家。 在比爾蓋茲七年級的時候，他轉學到私立的湖濱中學（Lakeside School）。正巧在比爾蓋茲進入的第二年，湖濱中學創立了一個電腦社團，並買了一台分時系統的電腦。 比爾蓋茲加入了電腦社團，開始學習編程。學校給學生的上機時間很短，但正巧當地一間電腦公司的創辦人的子女也在湖濱中學讀書，比爾蓋茲就被邀去該電腦公司測試軟體，以換取使用電腦的時間。於是乎，比爾蓋茲在26歲就累積了一萬小時的編程經驗了。 兩位比爾，不光是他們投入的努力，更重要的是有這種非比尋常的機運。 出生的時間又再度決定了你的成功在這個章節的最後，作者又再提了出生時間和能否成為電腦大亨的關聯性。 1975年代是個人電腦時代的開端。如果你在1975年左右大學畢業，更有可能在電腦業有所成就。作者舉了比爾蓋茲、比爾喬伊、史帝夫賈柏斯、史帝夫巴爾默等人，都是出生在1950年代左右，正巧是大學畢業的年紀。 如果是生在1950年代之前的人，可能還是做著傳統的工作，並不會去買一台電腦來玩玩。如果是生在1950年代之後的人，可能會加入電腦產業，但是已經失去了先機。 軟體工程師請別灰心，作者要說的是環境與機遇的重要性，他沒有否定努力的價值軟體工程師請別灰心，作者要說的是環境與機遇的重要性，他沒有否定努力的價值軟體工程師請別灰心，作者要說的是環境與機遇的重要性，他沒有否定努力的價值 異數這本書的其他重點異數這本書還有一些有趣的重點，不過就和軟體工程師比較沒有關係了。 家庭背景的影響力遠高於智商書中有提到學者特曼追蹤一群高智商的人，研究他們的智商和表現。後來有人發現這些人之中有較高成就的，都是有比較好家庭背景，至少都有中產階級。而另外一群表現較差的高智商份子，往往來自於弱勢家庭或是少數族裔。書中以克里斯多夫蘭根(Christopher Langan)做為高智商低成就的代表，他父親整天酗酒暴力。 另外作者還提出了一個結論，智商130之上就沒有特別的差異了。 敬語造成飛機失事語言中的敬語會造成飛機失事這章節很有趣。主要是提到大韓航空以前的飛機失事率很高，美國國家安全交通會研究黑盒子後發現，因為副機長在正機長發生失誤時，用敬語委婉地提醒正機長，卻導致正機長不予理會，因此墜機。 後來國際上就要求一律要求使用英文，並且不要用舒緩語氣進行溝通，以避開地位落差造成的飛安問題。 （書上還節錄了飛機墜落前的對話Q_Q） 中文發音讓你數學變好書中研究了為什麼中文的使用者，常常能來國際數學競賽的原因。因為中文的數字都是一個音節，而英文的數字常常是多個音節。而且中文的數字發音遞增得很有規則，英文則不是。看看那11和12的發音，以及21和22的發音，就知道英文的數字多不規則了。 文化造成的差異書中也提了亞洲人勤勞的文化造成他們更容易成功。也提到了美國南方和北方人的文化差異。 有錢人家的小孩什麼都比較會有錢人家的小孩什麼都比較會這是真的。作者舉了美國一個教育機構KIPP(Knowledge is power program)的研究發現，有錢人家的小孩在假期的時候，都會送小朋友去營隊學習，或是許多的課外活動，而窮人家的小孩在假期只能看看書。窮人家小孩的閱讀能力雖然因此比較高，但是其他能力都輸給了有錢人家的小孩。 少數族裔比較難以成功書中也提到了少數族裔比較難以成功的困境。 結論異數這本書主要在講環境和機運對成功的重要性，雖然他沒有否定努力價值，但是要成為OUTLIERS，還是需要環境和機運的……。讀完後更加相信「謀事在人，成事在天」這句話了……。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>小論文系列</tag>
        <tag>讀書心得</tag>
        <tag>一萬小時的努力</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在有與沒有之間--為什麼設計資料庫欄位時不建議用布林值]]></title>
    <url>%2Fdatabase%2FDesign-datebase-do-not-use-boolean.html</url>
    <content type="text"><![CDATA[最近「在有與沒有之間」這句話紅透半邊天，成為許多人茶餘飯後揶揄的話題。 雖然「在有與沒有之間」乍聽之下很不可思議，但是這也反應了現實世界的不確定性。 我們這篇文章就用「在有與沒有之間」來討論為什麼設計資料庫欄位時，不建議用布林值的data type。 根據小弟多年接案的經驗，若要設計符合現實世界的系統時，一定要考慮到現實世界不確定性。 先從戰男女開始以前很常看到資料庫的性別欄位，用 True 或 False 來表示。 這類的資料庫常常把男性塞入 True 值，女性塞入 False。 會有這樣子的設計是因為布林值只有 True 和 False，而剛好男女是兩個性別，可以對應布林值。 但這很容易就引發了論戰，為什麼男性就是「對的」，女性就是「錯的」？ 如果反過來，又會被爭論，為什麼女性就是「對的」，男性就是「錯的」？ 性別議題其實是很嚴重的問題，或許生在台灣的我們覺得還好，可是在美國如果有職場上的性別歧視，那一定就等著被告上法院了。 因此，性別實在不適合用 True 或 False 來表示。 現在多了跨性別者的選項傳統上只是男女的二分法，用布林值來實現是可行的。 但是隨著人權的發展以及醫學的進步，大家開始認知到跨性別者的存在。 性別欄的部分就必須多了一個選項，因此布林值的二分法就完全不能使用了。 布林值只有 True 和 False，沒有「在 True 與 False之間」這個值。 所以在設計資料庫的性別欄位時，已經不能使布林值了。 真實世界的「在有與沒有之間」許多系統在一開始設計的時候，可能都會只使用布林值來表示兩種狀態。 我們來舉個例子說明。 某公司的公文系統，在送出公文之後，會在系統上看到該公文的兩種狀態：完成 和 未完成。 完成和未完成這兩種狀態，一開始軟體工程師在設計系統時，就用了布林值來做欄位。 幾年後，老闆突然抱怨說，系統上只能看到完成和未完成，根本不知道該職員是否已經收到那份公文，開始進行。 因此要求IT人員在公文系統裡新增一個「處理中」的狀態。 哇這下子就慘了，原本欄位只能塞布林值，可是現在多出了第三種狀態，就塞不進去該欄位了。 要解決這個情況，第一個方法是把資料表上，再加上一個欄位，再顯示進行中的狀態 第二個方法就是把原本布林值的欄位，改成其他的data type。 兩種方法都有可能讓整個系統掛掉，費很多功能來重寫重構。 較佳的欄位設計注意我用的詞是「較佳」的欄位設計，不是絕對。世上沒有什麼系統是絕對的。 較佳的設計方式，應該把布林值的欄位改成存 int 的data type。 另外再有一張表，存該 int 所代表的內容。 以性別為例，開一張 gender 表，男性存0，女性存1，跨性別存2 然後在主會員資料表中的 gender 欄位，就存 0, 1, 2。 未來如果有第四性別的產生就可以存入4， 如此一來，系統就不用大改了。 同樣的方式，剛剛的公文系統也可以開一張 status 表 未完成存0，處理中存1，完成存2 然在公文資料表中的 status 欄位，就存0, 1 ,2。 未來如果老闆要再加入其他的狀態，如「會簽其他科室」，就可以存3 如此一來，就不會因為改系統，導致全公司的公文系統都不能用了 注意，有些資料庫如MySQL是把布林值視為TINYINT，這要小心 結語 用布林值來存資料，可能導致某些人不開心。 用布林值來存資料，容易讓系統缺乏擴充性。 有人或許會爭論，用布林值是比較快速的作法，但是要想想擴充性啊。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>database</category>
      </categories>
      <tags>
        <tag>在有與沒有之間</tag>
        <tag>資料庫設計</tag>
        <tag>小論文系列</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Keychron K4 藍牙機械式鍵盤開箱文]]></title>
    <url>%2Fkeyboard%2Fkeychron-k4-unboxing.html</url>
    <content type="text"><![CDATA[工欲善其事，必先利其器。身為一個好的軟體工程師，一定要有一把好的機械式鍵盤。 多年前我有買一把ROCCAT的機械式鍵盤，那是 Microsoft layout的鍵盤，紅軸的優雅相當適合打程式。 可是近幾年，慢慢把開發的工作轉移到 Macbook Pro上面，但市面上有 Mac layout的鍵盤並不多，因此還是用著 Microsoft layout的鍵盤撐著用。 終於今年，讓我等到了 Keychron K4 鍵盤的降世。 Keychron 出了很多款鍵盤，都有 Mac layout，像是 K1, K2系列都頗受好評。 不過因為我是軟體工程師，常常有輸入數字與做運算的需求，因此沒有右邊數字鍵的鍵盤就不太符合我的需求。 到了今年2019中，有數字鍵盤的Keychron K4終於在 Kickstarter 上面募資啦！！ Kickstarter上募資的，鋁合金版K4含運費是93美金，加購手托再加19美金。 本篇文章會先介紹鍵盤本身，接著圖文開箱，接著優缺點比較，最後放上試打影片 先來介紹Keychron K4 Keychron K4 有數字鍵盤。 是機械鍵盤，而且不是矮軸的鍵盤。 有光軸可以選擇，讓你的鍵盤反饋更及時。（但我還是選了Gateron機械茶軸） 有藍牙連線多台設備的功能。最高支援同時三台切換。 可以切換 Mac layout 或是 Microsoft layout。 Mac的功能鍵那排都能支援！！ 這些點完全打中了我對於鍵盤的需求，因此我就立刻在 Kickstarter上面參與募資啦！ 好的廢話不多說，我們馬上來進行等了快半年的開箱吧！ 開箱文開始收到的包裏 順豐的包裏真的很快就送到台灣了，包得挺密實的。 Keychron K4 和手托的外包裝 果然鍵盤的外盒還是有嚴重受損啊！雖然包得很密實，但是沒有氣泡紙……。 黑色盒子為鍵盤的盒子，木色盒子為手托盒子。 手托（選配） 這張是手托的正面照，胡桃木的紋路真的很漂亮。表面也有拋光處理。 這張是手托的背面照，背面也有拋光處理，還有止滑墊。 Keychron K4外包裝盒 這張是K4外包裝盒的正面照，是鍵盤的紋路局部上光。 這張是K4外包裝盒的背面照，說明這隻鍵盤有什麼功能。 鍵盤外盒上的標簽。 Keychron K4 盒內配件 打開Keychron K4 的外盒。 把Keychron K4的所有配件都拿出來。 說明書一份 操作圖卡一份 電源線一條 拔帽器一個 Windows鍵帽一組 Keychron K4一支 Keychron K4 電源線 Keychron K4 的電源線是布編織線，很有質感。 Keychron K4 的拔鍵器 Keychron K4 的拔鍵器長這樣子，很好拔很順手。 Keychron K4 操作圖卡 盒內附的操作圖卡，可以讓你快速上手。 Keychron K4 鍵盤本體 Keychron K4 的側面有電源線、裝置切換開關，和藍牙/有線切換開關。 可以看出鍵盤本身的厚度還滿厚的，這是因為要讓鍵盤軸體能夠放得進去的緣故。 這鋁合金消光黑的外殼質感真的很讚。 Keychron K4 的背面有支架和和止滑墊。 Keychron K4 和我的 Macbook pro 13吋擺在一起的樣子。 因為有數字鍵盤鍵的關係，所以還是大了一點。如果不在意數字鍵盤而是在意大小的朋友，可以買K2版本的。 優缺點比較優點 支援 Mac和 Windows。 茶軸打擊起來的手感超棒。 緊湊式的設計，相對不佔空間。 續電力超強。 連線很穩定，自動斷電後又重新連線回去相當快速。 可以切換多個設備，同時使用平板或其他筆電時相當好用。 做工質感超好，尤其鋁合金外殼，摸起來真的很舒服。 也可以用有線模式來連線，會更加穩定。 缺點 緊湊式的設計，反而有些鍵位不太習慣。（這是使用到現在最有感的缺點） 因為不是矮軸，所以鍵盤略高，必須搭配手托才用得舒服。 燈光特效太花。或許有些人覺得燈光特效不錯，但是我不習慣這麼花 XDD。 尚未推出注音符號鍵帽，不過這對嘸蝦米輸入法的使用者來說無感 XDD。 藍牙版本只有3.0。 試打影片最後讓我們來看看試打影片和燈光效果吧！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>keyboard</category>
      </categories>
      <tags>
        <tag>Unboxing</tag>
        <tag>Keychron K4</tag>
        <tag>Macbook鍵盤</tag>
        <tag>藍牙鍵盤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三十分鐘內，不用寫程式，教你打造具自然語言能力的聊天機器人]]></title>
    <url>%2FChatBot%2Fdialogflow-and-luis-to-line-chat-bot.html</url>
    <content type="text"><![CDATA[這份投影片是在2019/10/23、於人工智慧學校年會所演講的內容。 主要介紹了Dialogflow使用，一步一步的基礎教學，最後整合到Line裡面。 並且介紹 Dialogflow 和 LUIS 的差別。 三十分鐘內，不用寫程式，教你打造具自然語言能力的聊天機器人 from Ko Ko 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>ChatBot</category>
      </categories>
      <tags>
        <tag>slides</tag>
        <tag>LINE bot</tag>
        <tag>LUIS</tag>
        <tag>NLP</tag>
        <tag>Dialogflow</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LinePay教學附範例程式碼]]></title>
    <url>%2FChatBot%2FLinePay-tutorial-with-sample-code.html</url>
    <content type="text"><![CDATA[這份投影片是在2019/10/23、於Chatbot Developers Taiwan分享的內容。 主要介紹了LinePay的機制，使用了一張圖了解LinePay，並附上範例程式碼，來讓使用者明白怎麼做串接。 如果有串LinePay的需求，不妨先看看投影片的內容，可以輕鬆了解LinePay主要兩支API的機制。 LinePay串接全紀錄 from Ko Ko 影片版的教學在大魔術熊貓工程師的Youtube頻道，看影片教學可以理解得更清楚。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>ChatBot</category>
      </categories>
      <tags>
        <tag>line pay 串接教學</tag>
        <tag>line pay 教學</tag>
        <tag>line</tag>
        <tag>線上支付</tag>
        <tag>slides</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Raspberry Pi 4 開箱文（Desktop Kit）]]></title>
    <url>%2FRaspberryPi%2Fraspberry-pi-4-desktop-kit-unboxing.html</url>
    <content type="text"><![CDATA[2019 COSCUP有很多來自海外的社群，還有來自日本的Japanese Raspberry Pi Users Group 剛好我也是樹莓派玩很兇，就去社群攤位聊聊天 Masafumi Ohta（太田昌文）先生是日本樹莓派社群的負責人，也出過樹莓派的書 我們聊了好多樹莓派相關的技術和應用，然後抽中一組Raspberry Pi 4 Desktop Kit當成紀念 XDD COSCUP的目的，真的就是要去交朋友的！！ 先來介紹樹莓派4 model BRaspberry Pi 4 model B 可以說是現在最強的開發板之一了 有幾點和以前比較不一樣的，需要特別注意。 RAM的大小有1GB、2GB 和 4GB 可以選擇。 電源供應變成 5V/3A DC 的USB type C 了。（注意電源線要買沒有e-mark的哦！） 有兩個 mini HDMI 輸出，也就是說，支援雙螢幕啦！！還可以到 4k 哦！！ 支援藍牙 5.0 啦！ 從4個USB 2.0，變成2個 USB 3.0 和2個 USB 2.0。 整體規格看下來，真的屌打我那張Tinker Board，甚至是還勝過新出的Tinker Board S了。 看樣子可以讓我的工作很久的小server，Tinker Board退役了……。 開箱文開始Raspberry Pi 4 Desktop Kit 是樹莓派4的桌機組，內含： 電源供應器 micro HDMI 線材兩條 鼠鍵組 最新版 Raspberry Pi Beginner’s Guide 16GB SD卡，已安裝NOOBS Raspberry Pi 4 RAM 4GB版，含外殼 外包裝 外包裝的紅色，就是樹莓派專屬的紅色，整體很有樹莓派的設計風格。 外包裝的側面，標示著內含物。 打來會看到電源供應器、Pi 4含外殼、官方滑鼠，和一張SD卡 把上層拿起來，可以看到下層有官方鍵盤，鍵盤下方有Beginner’s Guide。 兩條mini HDMI線也放在下層 SD card SD卡含adapter，上面印有樹莓派的logo，真的超可愛！！ 抽出micro SD卡後，看到是SanDisk EDGE 16GB （還好不是附雜牌的micro SD卡 XDD） 電源供應器 這組電源供應器的插頭型號是US，在台灣就可以直接插上插座囉！ 接頭也是USB Type C 的了，可惜線材和adapter是不能拆開的。 官方滑鼠 滑鼠盒的上下開口都有封條。是標準的三鍵滑鼠，可以相容所有的樹莓派產品。 滑鼠正面 滑鼠背面。跟我的手掌差不多大呢！果然是號稱人體工學設計。 Pi 4 本體 一打開盒子，發現外殼已經穿上了。 期待多年的 USB 3.0，真的實裝了！！ 把外殼拆開，可以看到該有的插孔都還在。 但是畫面輸出變成兩個 mini HDMI了。 官方鍵盤 鍵盤包裝的背面。居然寫著，提供3個 USB 2.0的孔！！ 鍵盤正面，是78鍵鍵盤。連接線和鍵盤本身是可以分開的。 鍵盤常見的 windows 鍵，也改成了樹莓派鍵。 鍵盤的上面還真的提供3個 USB 2.0 的孔，看樣子可以插其他的周邊裝置了！！ USB 3.0就留給大量讀寫的I/O吧。 mini HDMI 附贈兩條 mini HDMI，就可以直接做雙螢幕啦！！ 官方手冊 裡面還附了一本Raspberry Pi Beginner’s Guide，內容已經升級到支援 Pi 4 了。 看看內容，覺得教的還滿基本的！ 結語以上就是 Raspberry Pi 4 的開箱文啦！！ 大家有心動，想要買一組 Desktop Kit 了嗎？ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>RaspberryPi</category>
      </categories>
      <tags>
        <tag>Unboxing</tag>
        <tag>IOT</tag>
        <tag>conference</tag>
        <tag>Raspberry Pi 4</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[從負面案例來討論接案工程師該有什麼軟技能]]></title>
    <url>%2Fwork%2Fnegative-examples-for-remote-work.html</url>
    <content type="text"><![CDATA[做遠距接案工作也快兩年了，和許多工程師合作過，也接過不少案子 2019/05/17，在台中最棒的共同工作空間Monospace，剛好有個遠距工作者的分享會 於是就立刻去報名講者，分享一些自己碰到的負面案例 希望可以從這些負面案例，和其他遠距工作者交流 投影片的內容很短，可以直接跳到最後面看總結 XDD 從負面案例來討論接案工程師該有什麼軟技能 from Ko Ko 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>work</category>
      </categories>
      <tags>
        <tag>slides</tag>
        <tag>remote work</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[YOLO V1 論文導讀投影片]]></title>
    <url>%2FAI%2Fyolo-v1-slides.html</url>
    <content type="text"><![CDATA[參加了一段時間的 AI Tech 論文導讀社群，終於輪到我報告論文啦！！ 因為工作上需要用到大量的物件辨識的技術，所以就選了承先起後、繼往開來的YOLO V1來做報告。 我是在2019/03/17、於夢森林分享論文的，不過最近才有空上傳投影片 XDDD 投影片上傳在slideshare，就直接嵌進來。 YOLO V1 論文導讀 from Ko Ko 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>slides</tag>
        <tag>Object Detection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用Python比較兩個list內容的差異]]></title>
    <url>%2FPython%2Fpython-compare-two-lists.html</url>
    <content type="text"><![CDATA[在整理資料的過程中，常常碰到兩個資料夾之中，裝有類似、但不完全一樣的檔案數量 例如說，同樣的檔案名稱，但是不同的副檔名（常見於深度學習的影像檔和標記檔） 這時候就會先把各類別的檔案名稱，存到各自的list之中 如果要比較兩個list之間的差異，就可以利用set().symmetric_difference()來完成： 12345678def Diff(li1, li2): return (list(set(li1).symmetric_difference(set(li2))))list1 = [1,2,3,4,5]list2 = [5,6,7,8,9]print(Diff(list1, list2)) 因為兩個list，只有5是一樣的，這時候會就印出：1[1, 2, 3, 4, 6, 7, 8, 9] 如果改把list2改成：1list2 = [1,2,3,4] 那麼就會印出：[5]，因為只有5，是不一樣的。 善用set().symmetric_difference()，就可以很容易的找到兩個資料夾不同的地方啦！！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用Wakatime來掌握寫程式的時間]]></title>
    <url>%2Ftools%2Fwakatime-for-time-management.html</url>
    <content type="text"><![CDATA[平常都不知道花了多少時間在寫程式嗎？ 一個專案投入多少時間成本進去，拿到的收入是否對價呢？ 在這裡推荐一個好工具來管理寫code寫專案的時間。 WakatimeWakatime是一個開源專案的時間管理插件。 針對不同的IDE或是編輯器，他都有提供插件。 像是我常用的Android Studio，VS code，Visual Studio 等等工具，都能安裝這個插件。 大家可以去這裡看看Wakatime支援哪些IDE。 並且點擊IDE icon進去之後，可以看到安裝的詳細流程，因此本文就不介紹Wakatime的安裝啦！ 使用github帳號登入，並且在你用的IDE中安裝好並輸入要求的API key（安裝流程裡都有寫哦！），就能開始使用囉！ Wakatime有哪些功能？Wakatime最重要的，就是寫程式時間的統計啦！ 只要登入Wakatime官方網站後，首頁就是你寫程式的Dashboard。 這個Dashboard是以一周為單位，當然可以從settings再進去做調整。 最基本的功能就是你這周每天寫程式寫了多久。 還有圓餅圖，分析你在各個程式語言裡花了多久的比例。 這個功能很酷炫，尤其是寫很多語言的工程師，圓餅圖會變得很花 XDD 還有你使用什麼IDE，以及用了多久。 像我最常用的就是Android Studio，VS code，Visual Studio，從圖片中看起來分配得還滿平均的XDD。 最重要的功能就是在這裡啦！！ 可以看你每個專案花了多少時間，在專案管理上特別的好用。 當然每個專案點擊進去，還會有更詳細的分析。 有了這個輔助功能之後，更能掌握自己寫程式的效率，在估算人天或是人月上就更方便了呢！ 不過工程師不是一直都在coding，也會很常在看技術文件、論文或是做設計，因此不能單單用Wakatime來評估績效哦！ Wakatime費用Wakatime 如果免費使用的話，只會顯示兩周內的紀錄。 不過那些紀錄都不會被刪掉的，一旦你付費，就能看到自己從古至今的紀錄啦！ 費用的連結在這裡。 還是要再次強調工程師不是一直都在coding，因此不能單單用Wakatime來評估績效哦！ 如果是企業買來看員工的效率，要考慮一下相關的績效指標哦！ 不想付費怎麼辦？別擔心，Wakatime每周都會寄周報到你的電子信箱。 周報裡面都會有這周的語言使用時間、每個專案花的時間和IDE的時間。 因此透過email的內容做紀錄，也是可以啦！ Wakatime的安全性Wakatime是開源的，如果怕怕的話，可以去Wakatime github看原始碼哦！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>Wakatime</tag>
        <tag>IDE tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Next主題加上最近文章版面]]></title>
    <url>%2FHexo%2Fhexo-next-recent-article-area.html</url>
    <content type="text"><![CDATA[當初會選擇Next這個主題，就是看在它黑白分明配色，相當符合熊貓的主題。 用了一陣子後發現，這個主題居然沒有最近文章的版面。 沒有的話，就只好自己動手做啦！ 雖然不會寫swig，不過大概就是和ejs很像的東西吧 具體步驟 打開next/layout/_macro/sidebar.swig 找個喜歡的地方，貼上下列程式碼。（我是貼在if theme.links的前面） 1234567891011121314151617&#123;% if theme.recent_posts %&#125;&lt;div class="links-of-blogroll motion-element &#123;&#123; "links-of-blogroll-" + theme.recent_posts_layout &#125;&#125;"&gt;&lt;div class="links-of-blogroll-title"&gt; &lt;!-- 設定你要的fa fa icon--&gt; &lt;i class="fa fa-history fa-&#123;&#123; theme.recent_posts_icon | lower &#125;&#125;" aria-hidden="true"&gt;&lt;/i&gt; &#123;&#123; theme.recent_posts_title &#125;&#125;&lt;/div&gt;&lt;ul class="links-of-blogroll-list"&gt; &#123;% set posts = site.posts.sort('-date') %&#125; &#123;% for post in posts.slice('0', '5') %&#125; &lt;li&gt; &lt;a href="&#123;&#123; url_for(post.path) &#125;&#125;" title="&#123;&#123; post.title &#125;&#125;" target="_blank"&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt; &lt;/li&gt; &#123;% endfor %&#125;&lt;/ul&gt;&lt;/div&gt;&#123;% endif %&#125; 在主題的設定文件hexo/themes/next/_config.yml，加上下列參數。 123recent_posts_title: 近期文章recent_posts_layout: blockrecent_posts: true 使用指令重建hexo，就可以看到近期文章的區塊啦。hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo Next theme</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 404和字母大小寫的問題]]></title>
    <url>%2FHexo%2Fhexo-404-and-letter-case.html</url>
    <content type="text"><![CDATA[最近發現有些頁面會出現404，都是發生在點入特定的標簽或是分類時發生了。 研究了一下，居然是因為字母大小寫的問題產生的 orz。像是分類如果寫CSS，和css，就會出現錯誤。 那麼我們要怎麼解決這個問呢？ 解決方法在.deploy_git中，原始的設置是對大小寫不敏感的，可實際上大小寫不一樣就讓你404。 所以我們要修改.deploy_git中的設置。 從Windows檔案總管或Mac Finder中打開專案中.deploy_git的資料夾。 進到.deploy_git資料夾中.git，找到文件config。(用VS code可能會找不到.git資料夾) 打開文件config，將 ignorecase=true 改為 ignorecase=false，存檔。 把.deploy_git資料夾中除了.git之外的文件通通刪掉。 再用指令hexo clean &amp;&amp; hexo g -d，清除並佈署上去，就會發現404修好啦！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>page 404</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS Flex筆記--從六角學院的遊戲出發]]></title>
    <url>%2FCSS%2Fcss-flex-hexschool-game.html</url>
    <content type="text"><![CDATA[最近玩了六角學院出的CSS Flex的遊戲 雖然自從Bootstrap 4 出來之後，就開始有在用Flex排版。 但是畢竟依賴框架的下場就是原生的寫法不甚熟悉。 不過沒沒有想到花了半個小時，就破全關了。等於一個關卡1.5分鐘。 某位前端高手好友，也差不多是這個數字，表示我寫CSS的功力還算可以啦 XDDD 倒是六角學院的社團內一堆十分鐘左右破關的妖魔鬼怪，真的是前端人材濟濟。 CSS Flex排版看完這篇就能幾乎掌握CSS Flex排版啦！！ Flex是CSS3之後推出的，主要為了適應不同螢幕尺寸和設備而誕生的排版方法。 因此已經不用再使用Float排版啦！ 1.先設定Flex排版一開始要先設定一個Flex排版，不然Flex相關的屬性都會吃不到的。 123.my-flex &#123; display: flex;&#125; 2.Flex可以設定排版方向 – flex-direction可以設定欄與列的排版方向，光這是一點就打爆古早Float的寫法啦！！ 如果不設定的話，default是row。 Flex-direction的效果可以到這個網頁去試玩。 1234.my-flex &#123; display: flex; flex-direction: row|row-reverse|column|column-reverse|initial|inherit;&#125; 3.元素超出螢幕範圍時是否換行 – flex-wrap如果選擇no-wrap的話，就會把所有的元素都擠在同一行裡。 no-wrap做某些表格類型的呈現，但又不是表格的特別好用 XDD。 一樣可以到W3School去試玩 1234.my-flex &#123; display: flex; flex-wrap: nowrap|wrap|wrap-reverse|initial|inherit;&#125; 4.把direction 和 wrap 二合一 – flex-flow用flex-flow可以只寫一行，就把direction 和 wrap 二合一。 第一個參數direction，第二格是wrap。注意中間用空格隔開。 1234.my-flex &#123; display: flex; flex-flow:row-reverse nowrap;&#125; 5.元素對齊的方式之一 – justify-contentjustify-content是元素對齊的方式，可以簡單地把它當成水平排版的方式。 最常用到的功能就是水平置中啦！！ 一樣可以到W3School去試玩 1234.my-flex &#123; display: flex; justify-content: flex-start|flex-end|center|space-between|space-around|initial|inherit;&#125; 6.元素對齊的方式之二 – align-itemsalign-items是元素對齊的方式，可以簡單地把它當成垂直排版的方式。 最常用到的功能就是垂直置中啦！！ (垂直伸展stretch其實也還滿常用的到的啦) 一樣可以到W3School去試玩 1234.my-flex &#123; display: flex; align-items: stretch|center|flex-start|flex-end|baseline|initial|inherit;&#125; 7.多行元素對齊的方式 – align-contentalign-content是多行元素對齊的方式。 注意這個屬性要加上flex-wrap才能使用哦！！ 一樣可以到W3School去試玩 1234.my-flex &#123; display: flex; align-items: stretch|center|flex-start|flex-end|baseline|initial|inherit;&#125; 到此為止，已經學完CSS Flex的排版啦！！接下來要來看CSS Flex個別子元素的排版啦！！ CSS Flex個別子元素的排版一個Flex容器內的各個子元素，都還可以獨立再做排版的。 1.個別子元素的對齊 – align-selfalign-self是針對個別子元素的對齊調整，只要注意該子元素的外層是flex即可。 一樣可以到W3School去試玩 12345678.my-flex &#123; display: flex;&#125;//外層是.my-flex.my-flex1 &#123; align-self: auto|stretch|center|flex-start|flex-end|baseline|initial|inherit;&#125; 2.個別子元素的寬度 – flex-grow &amp; flex-shrinkflex-grow &amp; flex-shrink是針對個別子元素的寬度調整，望文生義即可知道為寬度增加和減少。 要注意該子元素的外層是flex。 到W3School去試玩flex-grow到W3School去試玩flex-shrink 123456789101112.my-flex &#123; display: flex;&#125;//外層是.my-flex.my-flex1 &#123; flex-shrink:8;&#125;.my-flex2 &#123; flex-grow:8;&#125; 以上就是CSS Flex常用到的排版技巧啦！！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>css flex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解決 Hexo Searchdb 不能使用的問題]]></title>
    <url>%2FHexo%2Fsolve-hexo-searchdb-not-work.html</url>
    <content type="text"><![CDATA[有一天，突然Hexo的searchdb插件不能用了！！ 點擊搜尋後，會顯示載入中的動畫，可是一直都沒有載入 orz Hexo的搜尋文章功能，是建立一支xml檔上面的，叫做search.xml 打開瀏覽器，進入到這個xml檔的路由，看看到底發生什麼事情：localhost:4000/search.xml 這時候畫面居然提示：Input is not proper UTF-8, indicate encoding ! 怎麼可能會有非UTF-8的特殊字元呢@@？ 查遍了所有文章，都找不到非UTF-8的字元，真的是非常的神奇。 解決方法這時候突然靈機一動，想說會不會是VS code沒有顯示出非UTF-8的字元。 於是用Sublime text打開專案，果然就在字裡行間發現了一個東西長成這樣&lt;0x40&gt;。 也不知道怎麼冒出這個這東西的，總之刪掉了就好了…… orz 如果你Hexo searchdb的功能也不能用的話，試試看這招吧！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo searchdb</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Activeandroid在SDK26之後會遇到的bug]]></title>
    <url>%2FAndroid%2Fandroid-failed-to-find-provider-null-for-user-0.html</url>
    <content type="text"><![CDATA[在Room出來之前，activeandroid是最受歡的ORM之一。 在業界還是很容易碰到維護案裡，使用activeandroid。 可是在Android SDK 26之後，activeandroid會出現一個bug。 會出現下列的錯誤訊息：Error saving model java.lang.SecurityException: Failed to find provider null for user 0; expected to find a valid ContentProvider for this authority 這時候要怎麼解決這個問題呢？ 既然錯誤訊息說沒有contentprovider，我們就加一個上去吧！ 打開專案的AndroidManifest.xml檔，在aaplication tag 之間貼上下列的程式碼，就可以修好這個bug啦！ 123456&lt;provider android:name="com.activeandroid.content.ContentProvider" android:authorities="&lt;你的專案package name&gt;" android:enabled="true" android:exported="false"&gt;&lt;/provider&gt; 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>android-plugin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo文件永久連結設定的BUG順便談SEO]]></title>
    <url>%2FHexo%2Fhexo-permalink-bug-and-seo.html</url>
    <content type="text"><![CDATA[永久連結(permalink)在SEO中是非常重要的因素，這關乎你的網站能不能被容易被排名到前面。 在設定Hexo的永久連結時，按照官方文件做，結果卻遇到一個bug。 這篇文章最後會分享怎麼解決這個問題。 先談時間格式和SEO一個好的永久連結絕對不能超過三層，不然SEO的排名會比較後面。 像是www.test.com/article/2019/01/01/page.html 這種很多層的網址，就比較難有好的SEO表現。 （當然如果你這篇很多層的文章流量超高，SEO也是會排名比較前面啦！） 一般來說，網址會盡量不要超過三層，而日期這種型式的永久連結，就剛好會讓你網址超過三層。 再者，如果網址裡有日期的話，隨著時間的推移，Google漸漸下調你文章的排名。 雖然有的文章是不受時間影響的經典之作，但是就是Google的機制，也沒有辦法。 所以在設定Hexo永久連結時，建議要先把日期格式給改掉。 內容分類和SEO如果一個網址長得像這樣 www.test.com/cloths/men.html ，一眼就能看出這個頁面的分類屬於服飾類，而且還是男裝。 Google的爬蟲也是一樣的，這種分類清楚的網址，特別容易有較好的SEO表現。 所以在設定Hexo永久連結時，建議使用分類的格式。 而且文章的命名，也要清楚直接，讓人一看就知道這個網址可能是在講什麼主題。 記得字和字之間用dash - 來分開，不要用underscore _，Google有說過dash是比較好選擇。 切記之後就不要再改文章分類了，不然會嚴重影響SEO Hexo文件的BUG和解決之道談完了以上的內容，就是要設定Hexo的永久連結啦！ 按照文件，我要的永久連結格式是 分類/文章名稱，應該設定為 :category/:title 可是這樣子設定之後，卻沒辦法進去文章閱讀 @@ 反而會將整個文章頁面下載下來，打開那個下載檔，裡面是該文章頁面的內容……。 要修正這個問題，只要將 :category/:title 改成 :category/:title.html 就可以啦！！ 如圖所示，加上.html即可 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[為什麼選用Hexo來寫部落格]]></title>
    <url>%2FHexo%2Fwhy-choose-hexo.html</url>
    <content type="text"><![CDATA[在Evernote寫技術筆記很多年了，最近因為想寫技術部落格，於是開始來尋找部落格的架站平台。 原本想說用熟悉的Wordpress，可是想到主機商的費用和搬遷的不便性，就決定使用時下最熱門的Static Site Generator啦！ 目前Static Site Generator現在有三個最活躍的技術，分別是：Jekyll、Hugo、Hexo。 一開始在決定要用哪個技術時，其實考慮了很久。於是把各家的好壞都寫出來，讓大家參考。 Jekyll的好與壞Jekyll是Github自家品牌的Static Site Generator，有著強力後盾做為支援。 可是它是使用Ruby來達成的。 大家都知道Ruby在Windows環境下的支援度不太夠，雖然我是用Mac，但還是很常用Windows的環境來做開發。 再來是Ruby相對比較慢，看了許多部落格主的心得，文章多了之後，在建置網站時真的會花上幾分鐘的時間。 雖然後來incremental regeneration，能夠大幅加速，但是考量到常常使用Windows，加上和Ruby不熟，還是放棄它了。 Hugo的好與壞Hugo是用Go語言來達成的Static Site Generator，目前github上面的星星數已經超過Hexo了。 Hugo的特色是生成靜態網站的速度極快！官網號稱它是世界最快的！！ 原本我一度就要使用Hugo來架站了，可是發現Hugo的插件和主題，相對比較少。 而且居然還沒有上到1.0版，反觀Hexo都3.8版了。 於是就暫時放棄使用Hugo啦，未來的某一天，Hugo更成熟的話，說不定會改用Hugo吧？ Hexo的好與壞Hexo是用Nodejs去完成的，生成的速度也是很快，不過的確還輸給Hugo一截。 實測Hugo1秒內就能建置完三篇文章的內容，Hexo要花4秒多。 雖然Hexo慢了一點，但是Hexo已經出來很多年了，周邊插件和社群活躍度都很高，主題選擇性也很廣。 而且我對於Nodejs相關的生態系比較熟悉，到時候要自己改些什麼東西也比較方便。 最後讓我選擇Hexo的臨門一腳，是Next這個主題，其配色是黑和白，相當符合大魔術熊貓工程師的意象 XDDD 最近再自己加上代表竹子的綠色，更有熊貓的感覺啦！！ 附帶一提，Hexo是台灣人做的哦！在中國那邊的社群也是很活躍，因此中文資源也還滿多的。 以上就是三大Static Site Generator的分析啦！ 接下來會再分享一些使用Hexo時踩到的坑。 如果這篇文章有幫助到你，歡迎在下方disqus留言版點擊愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Wordpress</tag>
        <tag>Hexo Next theme</tag>
        <tag>Static Site Generator</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正確使用GPIO cleanup()方式]]></title>
    <url>%2FRaspberryPi%2Fcorrect-way-to-use-GPIO-cleanup.html</url>
    <content type="text"><![CDATA[在以Python寫樹莓派GPIO的時候，範例程式常常會在最後一行加上GPIO.cleanup()，讓程式結束時可以把GPIO的設定清掉。 最近在開發時，發現明明都已經加上了GPIO.cleanup()，但是設定還是都清不掉……。 GPIO一旦沒有清掉，在跑同一隻程式時，會出RuntimeWarning: This channel is already in use, continuing anyway. Use GPIO.setwarnings(False) to disable warnings. 這樣子的一段警告。 此時只能重新開機，才能重置GPIO。可是重新開機很麻煩啊，該怎麼辦呢？ 問題點在哪裡？首先我們先來看看問題點在哪？ 一般的範例程式，都是這麼寫的： 1234567while True: GPIO.output(LED_PIN, GPIO.HIGH) print("燈亮啦！")GPIO.cleanup() 上面的程式碼，明明在最後一行加上了 RuntimeWarning: This channel is already in use, continuing anyway. 可是按下 CTRL + C 中止之後，再跑一次程式，還是會得到 RuntimeWarning: This channel is already in use, continuing anyway. 的警告 因為 GPIO.cleanup() 在 while 迴圈外，所以根本不會執行到啊！！ 解決方法那麼我們該如何解決呢？ 只要善用例外處理的 try except finally 的技巧，就可以讓 GPIO.cleanup() 順利運作啦。 正確使用GPIO.cleanup()方式的範例如下： 1234567891011121314151617try: while True: GPIO.output(LED_PIN, GPIO.HIGH) print("燈亮啦！") except KeyboardInterrupt: # 當你按下 CTRL+C 中止程式後，所要做的動作 print("STOP") except: # 其他例外發生的時候，所要做的動作 print("Other error or exception occurred!" ) finally: GPIO.cleanup() # 把這段程式碼放在 finally 區域，確保程式中止時能夠執行並清掉GPIO的設定！ 如果這篇文章有幫助到你，歡迎在下方disqus留言版按愛心推荐哦！有任何問題請留言討論！也歡迎把大魔術熊貓工程師的文章連結分享出去哦！！]]></content>
      <categories>
        <category>RaspberryPi</category>
      </categories>
      <tags>
        <tag>IOT</tag>
        <tag>GPIO</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三波長燈管真的很亮]]></title>
    <url>%2FElectrician-plumber%2F20190406-hi-vision-lamp-is-good.html</url>
    <content type="text"><![CDATA[最近因為覺得工作室的燈光實在太暗了 除了工作時會想要睡覺之外，還會被螢幕的光線弄得很刺眼 於是來研究如何讓日光燈管更亮 爬了一下文，所謂的T5、T8、T9等等常見的名詞，指的其實是燈管的直徑，和照明的亮度關係不太大 比較重要的一點是，三波長燈管，遠比舊型的螢光燈管還要來得亮 也就是說，我只要換成三波長燈管，就可以讓工作室更亮囉！ 該怎麼買三波長燈管呢？很簡單，只要先看你的目前燈管的型號，然後再GOOGLE對應的型號就可以啦 以我原本的燈管為例，原本的型號是 FL20D/18 上網查了一下同規格的三波長燈管型號為 FL20/18D-EX 而且包裝上就寫明了這是三波長燈管，就可以直接買回家安裝啦！ 工作室裝上三波長燈管之後，再也不用額外開檯燈了呢！！註：T8和T9燈管，現在大部分都是三波長燈管啦]]></content>
      <categories>
        <category>Electrician_plumber</category>
      </categories>
      <tags>
        <tag>水電工</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[關於KoKo Mexcelsa]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[為什麼會想把這個技術部落格，取名為大魔術熊貓工程師呢？ 做為一個接案工程師，其實就像是魔術師一樣，客戶提出的要求，總是要像變魔術一樣把它變出來。 熊貓大概是我最喜歡的動物了。每次看到熊貓的傻傻呆萌的影片，受傷的心靈都被療瘉了！！ 熊貓命名有個大原則，就是用疊字。例如說團團、圓圓。剛好我的名字是KoKo，黑眼圈也很重XDD 中華一番裡樓麟艦的料理對決很精采。 為什麼不在Evernote上寫技術筆記了？ 還是一直在Evernote上寫技術筆記。Evernote的功能超強大，尤其是搜尋功能，都能準確的找到寫過的筆記，真的超神！ Evernote除了不支持md語法外，最大的缺點就是筆記是寫給自己看的，不像技術部落格的筆記是寫給全世界的人看。 我還是持續使用Evernote，不過寫的內容比較像是草稿。對外發表的技術筆記會整理過，才會分享在大魔術熊貓工程師。 多年來已經累積有上百篇的Evernote技術筆記，會再慢慢整理，分享給全世界。所以有時候可能會一天內發表很多文章。 工程師的社交圈很看重技術部落格。為了不要當邊緣人，只好逼著自己寫部落格 XDD 為什麼這個技術部落格的主題包羅萬象？ 接案工程師的工作性質，本來就會遇到各式各樣的難題。能夠把客戶的困難解決，才是優秀的工程師。 我是雙子座AB型，所以喜歡涉獵各種面向的知識。 身為一個潮男，走在技術的尖端也是很合理的。 作過些什麼專案呢？ 從硬體玩到軟體，從後端玩到前端，從Android玩到iOS，從物聯網玩到AI。 作品集網站，不過有些幫客戶做的太敏感的，就不克放上來啦！]]></content>
  </entry>
  <entry>
    <title><![CDATA[tags]]></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[categories]]></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
</search>
